<?php
namespace Admin\Controller;

use Common\Controller\BaseController;
use Think\Controller;

/**
 * 志愿服务
 * @author Calvin 2019/2/15
 */
class VolunteerServiceController extends BaseAdminController
{
    const status = array('草稿', '已结束', '进行中', '待开始', '已暂停');
    const basestatus = array(0 => '草稿', 2 => '发出');
    protected $_Volunteer;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->set_sidebar_module('App');
        $this->set_sidebar_sub('volunteerservice');
        $this->_Volunteer = D('VolunteerService');
    }
    // 支部列表页
    public function index()
    {
        $admin = admin();
        $auth = session_auth();
        $map = array();

        $keyword = I('get.keyword');
        $status = I('get.status');

        // 如果是超级管理员就渲染全部数据
        // 否则只能看自己发的
        if (1 !== intval($admin['uid'])) {
            $map['VolunteerService.uid'] = array('eq', $admin['uid']);
        }

        if (is_numeric($status)) {
            $map['VolunteerService.status'] = array('eq', $status);
        }else {
            $map['VolunteerService.status'] = array('gt', -1);
        }
        if ($keyword) {
            $map['VolunteerService.theme'] = array('like', '%' . $keyword . '%');
        }
        $lists = D('VolunteerServiceView')->findPage($map, 15, 'create_at desc');

        $this->assign('page', $lists);
        $this->assign('search', array('keyword' => $keyword, 'status' => $status));
        $this->assign('status', self::status);

        $this->display();
    }


    // 保存
    public function ajaxSave()
    {
        if (!empty(I('post.id'))) {
            $post['id'] = I('post.id');
        }
      $post['theme'] = I('post.theme');
      $post['status'] = I('post.status');
      $post['detail'] = I('post.detail');
      $post['address'] = I('post.address');
      $post['end_date'] = I('post.end_date');
      $post['start_date'] = I('post.start_date');
      $res = $this->_Volunteer->ajaxSave($post);
      if (is_array($res) && isset($res['id'])) {
          ajaxMsg(0, 'success', $res);
      }
      ajaxMsg(1, $res.'请重试');
    }

    public function edit()
    {
        $id = I('get.id');
        $res = $this->_Volunteer->field('id,theme,detail,address,start_date,end_date')->find($id);
        $this->assign('info', $res);
        $this->display();
    }

    // 渲染添加页面
    public function showAdd()
    {
        $this->display();
    }

    public function ajaxStatus()
    {
        $id = I('post.id');
        $status = I('post.status');
        if (2 == $status) {
            $res = $this->_Volunteer->field('start_date,end_date')->find($id);
            $int = getStatusBydate($res['start_date'],$res['end_date']);
            if(false === $int) $status = 0;
            $status = $int;
        }
        $bool = $this->_Volunteer->where(array('id'=>$id))->setField('status', $status);
        if (!$bool) ajaxMsg(1, '服务器繁忙，请重试..');
        ajaxMsg(0, 'success');
    }
}
