<?php
namespace Admin\Controller;

use Common\Controller\BaseController;
use Think\Controller;

/**
 * 待办任务
 * @author Calvin 2019/1/23
 */
class TasksController extends BaseAdminController
{
    const taskstype = array('党支部', '党小组', '个人', '纪检');
    const basestatus = array('禁用', '已结束', '进行中', '待开始');
    const fathername = 'tasks_admin';
    protected $_tasks;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->set_sidebar_module('Tasks');
        $this->set_sidebar_sub('index');
        $this->_tasks = D('TasksItem');
    }
    // 支部列表页
    public function index()
    {
        $admin = admin();
        $auth = session_auth();
        $map = array();

        // 如果是超级管理员就渲染全部数据
        // 否则只能看自己发的
        if (1 !== intval($admin['uid'])) {
            $map['TasksItem.uid'] = array('eq', $admin['uid']);
        }

        $keyword = I('keyword');
        $tasksType = I('get.tasksType', 'all');
        $status = I('get.status', 'all');

        $map['TasksItem.uid'] = array('eq', admin_uid());
        if (is_numeric($status)) {
            $map['TasksItem.status'] = array('eq', $status);
        }else{
            $map['TasksItem.status'] = array('gt', -1);
	}
        if (is_numeric($tasksType)) {
            $map['TasksItem.tasks_type'] = array('eq', $tasksType);
        }
        if ($keyword) {
            $map['TasksItem.tasks_title'] = array('like', '%' . $keyword . '%');
        }
        $lists = D('TaskeListView')->findPage($map, 15, 'create_at desc');

        $this->assign('page', $lists);
        $this->assign('search', array('keyword' => $keyword, 'status' => $status, 'tasksType' => $tasksType));
        $this->assign('status', self::basestatus);
        $this->assign('taskstype', self::taskstype);

        $this->display();
    }

    // 文件上传
    public function ajaxUploadAnnex()
    {
        $res = uploadAnnex(self::fathername, self::fathername, admin_uid());
        ajaxMsg(200, 'success', $res);
    }

    // 保存
    public function ajaxSave()
    {
        $post = $this->checkParameter();

        $res = $this->_tasks->ajaxSave($post);
        // ajaxMsg(1, '', $res);
        if (is_array($res) && isset($res['id'])) {
          ajaxMsg(0, 'success', $res);
        }
        ajaxMsg(1, $res.'请重试');
    }

    /**
     * POST 参数处理
     * @return [type] [description]
     */
    protected function checkParameter(){
        $post['id'] = I('post.id');
        $post['tasks_type'] = I('post.tasks_type');
        $post['branch_id'] = I('post.branchs');
        $post['group_id'] = I('post.group');
        $post['target'] = I('post.target');
        $post['start_date'] = I('post.start_date');
        $post['end_date'] = I('post.end_date');
        $post['tasks_title'] = I('post.tasks_title');
        $post['tasks_contents'] = I('post.tasks_contents');
        $post['work_item'] = I('post.work_item');
        $post['status'] = I('post.status');
        $post['file_id'] = explode(',', I('post.file_id'));
        $post['surplus_file_id'] = explode(',', I('post.surplus_file_id')); // to string
        $post['addFileId'] = getAddFileLists($post['file_id'], $post['surplus_file_id']);
        $post['delFileId'] = getDelFileLists($post['file_id'], $post['surplus_file_id']);
        $admin = admin();
        $post['publish_branch'] = $admin['branch_id'];
        $post['uid'] = $admin['uid'];
        if (2 == $post['status']) {
            $status = getStatusBydate($post['start_date'], $post['end_date']);
            if ($status !== false)  $post['status'] = $status;
        }
        return $post;
    }

    public function edit()
    {
        $id = I('get.id');

        $this->display();
    }

    // 渲染添加页面
    public function showAdd()
    {
        $this->assign('taskstype', self::taskstype);

        $this->display();
    }

    /**
     * 更新状态
     */
    public function ajaxStatus()
    {
        $id = I('post.id');
        $status = I('post.status');
        $_threemeeting = D('TasksItem');
        $bool = $_threemeeting->ajaxStatus($id, $status);
        if (true === $bool){
            ajaxMsg(0, 'success');
        }
        ajaxMsg(1, '服务器繁忙，请重试..');
        //
        // $_threemeeting = M('TasksItem');
        // $bool = $_threemeeting->where(array('id'=>$id))->setField('status', $status);
        // if (!$bool) ajaxMsg(1, '服务器繁忙，请重试..');
        // ajaxMsg(0, 'success');
    }

    public function getBaseData()
    {
        $type = I('post.type');
        if (is_numeric($type) && 2 == $type) {
            $users = getUsersBystatus();
            if ($users) {
                ajaxMsg(0, 'success', $users);
            }
        }elseif (1 == $type) {
            // $groups = getPartyGroup();
            $groups = D('GroupListView')->select();
            if ($groups) {
                ajaxMsg(0, 'success', $groups);
            }
        }elseif (0 == $type) {
            $branchs = getBranchInfo();
            if ($branchs) {
                ajaxMsg(0, 'success', $branchs);
            }
        }
        ajaxMsg(1, '无数据');
    }

    public function updateStatus()
    {
        $commentId = I('post.id');
        $status = I('post.status');
        $_comment = M('ThreeMeetingComment');
        $bool = $_comment->save(array('id'=>$commentId, 'status'=>$status));
        if (false === $bool) ajaxMsg(1, '更新失败。。请重试');
        if (1 == $status) {
            $meetingId = $_comment->where(array(
                'id' => $commentId))->getField('meeting_id');
            setIncComment($meetingId);
        }
        ajaxMsg(0, '更新成功');
    }

    public function demo(){
        ajaxMsg(1,'',admin());
    }
}
