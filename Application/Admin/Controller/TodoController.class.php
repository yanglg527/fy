<?php
namespace Admin\Controller;

use Common\Controller\BaseController;
use Think\Controller;

/**
 * 支部管理
 * Class SystemController
 * @package Admin\Controller
 */
class TodoController extends BaseAdminController
{
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->set_sidebar_module('Todo');
        $this->set_sidebar_sub('index');
    }
    // 待办事项列表页
    public function index()
    {
        $admin = admin();
        $auth = session_auth();
        $map = array();
        if ($auth == 2) {//总支
            $map['Todo.branch_hq_id'] = $admin['admin_branch_hq_id'];
        }
        if ($auth == 3) {//支部
            $map['Todo.branch_id'] = $admin['admin_branch_id'];
        }

        $map['Todo.status'] = array('gt', -1);

        $keyword = I('keyword');
        if ($keyword) {
            $map['Todo.title'] = array('like', '%' . $keyword . '%');
        }

//        $page = D('TodoView')->findPage($map, 15, 'create_time desc');
        $page = D('TodoView')->find_page($map, '','Todo.id', 'create_time desc',15);

        // 遍历解析每条待办事项的接收角色和接收支部
        $list = $page['list'];
        foreach ($list as $index => $item) {
            $ids = $item['receiver_roles'];
            if($ids){
                $roles = D('Role')->where("id in($ids)")->select();
                $item['roles'] = $roles;
            }

            $ids = $item['receiver_branchs'];
            if($ids){
            $branchs = D('PartyBranch')->where("id in($ids)")->select();
            $item['branchs'] = $branchs;
            }
            $list[$index] = $item;
        }
        $page['list'] = $list;

//        exit(to_json_string($page));
        $this->assign('page', $page);
        $this->display();
    }

    // 发布新待办事项
    public function todoAdd()
    {
        $admin = admin();
        $auth = session_auth();

        if($auth == 1){//获取所有支部
            $branchs = D('PartyBranch')->select();
            $this->assign('branchs', $branchs);
        }else if ($auth == 2) {//获取总支下的支部
            $hq_id = $admin['admin_branch_hq_id'];
            $branchs = D('PartyBranch')->where(array('branch_hq_id'=>$hq_id))->select();
            $this->assign('branchs', $branchs);
        }

        // 获取角色列表
        $roleList = D('Role')->select();
        $this->assign('roleList', $roleList);

        $id = I('id');
        if ($id) {//如果是编辑，解析接收角色和接收支部
            $detail = D('Todo')->find($id);
            $roles = explode(',', $detail['receiver_roles']);
            $receiverBranchs = explode(',', $detail['receiver_branchs']);
            $detail['roles'] = $roles;
            $detail['branchs'] = $receiverBranchs;
            $this->assign('detail', $detail);
        }

        $this->assign('p', I('get.p', 1));
        $this->display("todoAdd");
    }

    public function  ajaxSaveTodo()
    {
        $title = I('title');
        if (!$title) {
            ajaxMsg(1, '你忘了填标题了');
        }

        $id = I('id');
        $todo = D('Todo')->find($id);
        $auth = checkAuth($todo['branch_id']);
        if($auth > 0) {//有编辑权限 ljh
            if ($todo) { // 编辑
                D('TodoReceiverRole')->where("todo_id=$id")->delete();
            }
        }

        $roles = I('roles');
        $branchs = I('branch');

        $admin = admin();

        $todo = array(
            'id' => $id,
            'issuer_uid' => $admin['uid'],
//            'receiver_branch_id' => $admin[branch_id],
            'content' => I('content'),
            'receiver_roles' => implode(",", $roles),
            'receiver_branchs' => implode(",", $branchs),
            'title' => $title,
            'status' => I('status', 1),
            'request' => I('request'),
            'request_finish_date' => strtotime(I('request_finish_date'))
        );
//        ajaxMsg(1,'你忘了填标题了');
        if ($id) {
            if($auth > 0) {//有编辑权限 ljh
                D('Todo')->save($todo);
            }
        } else {
            if($auth > 0) {//有编辑权限 ljh
                $todo = set_save_auth($todo);
                $todo['create_time'] = time();
                $id = D('Todo')->add($todo);
            }
        }
        if($auth > 0) {//有编辑权限 ljh

            foreach ($roles as $item) {
                foreach ($branchs as $branch) {
                    $todo_receiver_role['role_id'] = $item;
                    $todo_receiver_role['branch_id'] = $branch;
                    $todo_receiver_role['todo_id'] = $id;
                    D('TodoReceiverRole')->add($todo_receiver_role);
                }
            }
        }

        ajaxMsg(0, '保存成功');
    }

    public function ajaxSaveTodoStatus()
    {
        $id = I('id');
        $todo = D('Todo')->find($id);
        if ($todo) {
            $status = $todo['status'];
            if ($status == 1) {
                $todo['status'] = 0;
            } else {
                $todo['status'] = 1;
            }
            D('Todo')->where(array('id' => $id))->save($todo);
            ajaxMsg(0, '保存成功');
        } else {
            ajaxMsg(1, '该事项不存在');
        }
    }

    //删除待办事项
    public function ajaxDecTodo()
    {
        $id = I('id');
        $todo = D('Todo')->find($id);
        if ($todo) {
            D('TodoReceiverRole')->where("todo_id=$id")->delete();
            D('Todo')->where("id=$id")->delete();
        }
        ajaxMsg(0, "已删除");
    }


    // 完成情况
    public function finishSituation()
    {
        $searchKey = array(); // 筛选条件数组

        // 获取待办事项id
        $id = I('get.id');
        if (!$id) {
            $id = I('id');
            exit('bbbb=' . $id);
        }
        $search = "Todo.id=$id";
        $searchKey['id'] = $id;

//        $admin = admin();
//        $search = "and TodoReceiverRole.branch_id=$id";

        // 关键字
        $keyword = I('keyword');
        if ($keyword) {
            $search = $search . " and User.realname like '%$keyword%' ";
            $searchKey['keyword'] = $keyword;
        }

        // 审核状态
        $todoUserStatus = I('todoUserStatus');
        $searchKey['todoUserStatus'] = $todoUserStatus;
        if ($todoUserStatus == 0) {
            $search = $search . " and  User.uid not in(select uid from todo_user_status where todo_id=$id)";
        } else if ($todoUserStatus == 1) {
            $search = $search . " and TodoUserStatus.status=$todoUserStatus";
        }

//        $page = D('TodoSituationView')->findPage($search, 15, 'User.uid asc');
        $page = D('TodoSituationView')->find_page($search, '','User.uid', 'User.uid asc',15);

        $this->assign('id', $id);
        $this->assign('page', $page);
        $this->assign('search', $searchKey);
        $this->display();
    }

    public function ajaxCheck()
    {
        $id = I('id');
        $status = I('status');
        $todoUserStatus = D('TodoUserStatus')->find($id);
        if ($todoUserStatus) {
            $todoUserStatus['status'] = $status;
            D('TodoUserStatus')->where(array('id' => $id))->save($todoUserStatus);
            ajaxMsg(0, '保存成功');
        }

        ajaxMsg(1, '用户未确认');
    }


}