<?php
namespace Admin\Controller;

use Admin\Model\AdminAuthRuleViewModel;
use Common\Controller\BaseController;
use Think\Controller;
use Think\Page;

/**
 * 文章管理
 * Class ContentController
 * @package Home\Controller
 */
class IntegralManagementController extends BaseAdminController {

	function _initialize() {
		parent::_initialize();
		// TODO: Change the autogenerated stub
		$this -> set_sidebar_module('Integral');
		$this -> set_sidebar_sub('index');
	}

	public function index() {
		// 获得所有符合条件的支部

		$auth = session_auth();
		$this -> assign('types', D('UserScoreType') -> select());
		$type = I('get.type');
		$start_date = I('get.start_date');
		$end_date = I('get.end_date');

		$type2 = implode(",", $type);
		$type = $type2 ? $type2 : $type;

		$search['start_date'] = $start_date;
		$search['end_date'] = $end_date;
		$search['type'] = $type;
		if ($type || $start_date || $end_date) {
			$this -> assign('hasCount', true);
		}
		$tab = I('get.tab', 1);
		if ($auth == 1) {//判断是否管理员
			if ($tab == 1) {//标签1 个人
				$page = $this -> _tab1_page($type,$start_date,$end_date);
				$this -> assign('tab', 1);
				$this -> assign('page', $page);
			} elseif ($tab == 2) {//标签2 支部
				$list = $this -> _tab2($type,$start_date,$end_date);
				$this -> assign('tab', 2);
				$this -> assign('list', $list);
			} else {//标签3 组织
				$list = $this -> _tab3($type,$start_date,$end_date);
				$this -> assign('tab', 3);
				$this -> assign('list', $list);
			}
		}

		$this -> assign('search', $search);

		$this -> display();
	}

	private function _tab1_page($type,$start_date,$end_date) {
		$pageCount = 15;
		$count = D('User') -> where('status=1 and role_id is not null') -> count();
		$page = new Page($count, $pageCount);
		$page -> rollPage = 8;
		$page -> setConfig('first', '首页');
		$page -> setConfig('prev', '上一页');
		$page -> setConfig('next', '下一页');
		$page -> setConfig('last', '末页');

		$pageInfo = array('pageNo' => I('get.p', 1));
		$pageInfo['pageCount'] = $pageCount;
		if ($count == 0) {
			$pageInfo['pageNo'] = 1;
			$pageInfo['pageTotal'] = 0;
			$pageInfo['size'] = 0;
			return array("show" => '', "list" => array(), 'pageInfo' => $pageInfo);
			;
		} else {

			$page -> setConfig('theme', '%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% 共 %TOTAL_PAGE% 页 ');

		}

		$pageInfo['pageNo'] = I('get.p', 1);
		$pageInfo['pageTotal'] = $page -> totalPages;
		$pageInfo['size'] = $page -> totalRows;

		$timesql = "";
		if($start_date && $end_date){
			$timesql = " and user_score_log.create_time > ".strtotime($start_date)." and user_score_log.create_time < ".(strtotime($end_date) + 24*60*60)." ";
		}elseif($start_date){
			$timesql = " and user_score_log.create_time > ".strtotime($start_date)." ";
		}elseif($end_date){
			$timesql = " and user_score_log.create_time < ".(strtotime($end_date) + 24*60*60)." ";
		}

//exit($timesql);

		if ($type) {
			$show = $page -> show_with_para("?count%5B%5D=sign");
			$sql = "select user.realname,user.uid,user.score,user.mobile,(select sum(user_score_log.score) from user_score_log where user_score_log.uid=user.uid and type in ($type) $timesql)  count_score from user where status=1 and role_id is not null order by count_score desc limit " . $page -> firstRow . "," . $page -> listRows;
		} elseif ($timesql) {
			$show = $page -> show_with_para("?count%5B%5D=sign");
			$sql = "select user.realname,user.uid,user.score,user.mobile,(select sum(user_score_log.score) from user_score_log where user_score_log.uid=user.uid $timesql)  count_score from user where status=1 and role_id is not null order by count_score desc limit " . $page -> firstRow . "," . $page -> listRows;
		} else {
			$show = $page -> show_with_para();
			$sql = "select user.realname,user.uid,user.score,user.mobile from user where status=1 and role_id is not null order by score desc limit " . $page -> firstRow . "," . $page -> listRows;
		}
		$show = str_replace("/count/", "", $show);

		$list = D() -> query($sql);

		$pageInfo['pageTotal'] = $page -> totalPages;
		$pageInfo['size'] = $count;

		//exit($sql);
		return array("show" => $show, "list" => $list, "pageInfo" => $pageInfo);
	}

	private function _tab2($type,$start_date,$end_date) {
			
		$timesql = "";
		if($start_date && $end_date){
			$timesql = " and user_score_log.create_time > ".strtotime($start_date)." and user_score_log.create_time < ".(strtotime($end_date) + 24*60*60)." ";
		}elseif($start_date){
			$timesql = " and user_score_log.create_time > ".strtotime($start_date)." ";
		}elseif($end_date){
			$timesql = " and user_score_log.create_time < ".(strtotime($end_date) + 24*60*60)." ";
		}

		if ($type) {
			$sql = "select Branch.name,
              (select u1.realname from user u1 where u1.branch_id=Branch.id and u1.post_id=1 limit 0,1) shuji_realname,
              (select sum(u2.score) from user u2 where u2.status=1 and u2.branch_id=Branch.id) score,
              (select count(*) from user u3 where u3.branch_id=Branch.id and u3.status=1) people_count,
	          (select sum(user_score_log.score) from (user_score_log left join user on user_score_log.uid=user.uid ) where user.status=1 and user.branch_id=Branch.id and user_score_log.type in ($type) $timesql ) count_score
              from party_branch Branch order by count_score desc,score desc,name desc ";
		} elseif ($timesql) {
			$sql = "select Branch.name,
              (select u1.realname from user u1 where u1.branch_id=Branch.id and u1.post_id=1 limit 0,1) shuji_realname,
              (select sum(u2.score) from user u2 where u2.status=1 and u2.branch_id=Branch.id) score,
              (select count(*) from user u3 where u3.branch_id=Branch.id and u3.status=1) people_count,
	          (select sum(user_score_log.score) from (user_score_log left join user on user_score_log.uid=user.uid ) where user.status=1 and user.branch_id=Branch.id $timesql ) count_score
              from party_branch Branch order by count_score desc,score desc,name desc ";
		} else {
			$sql = "select Branch.name,
              (select u1.realname from user u1 where u1.branch_id=Branch.id and u1.post_id=1 limit 0,1) shuji_realname,
              (select sum(u2.score) from user u2 where u2.status=1 and u2.branch_id=Branch.id) score,
              (select count(*) from user u3 where u3.branch_id=Branch.id and u3.status=1) people_count
              from party_branch Branch order by score desc,name desc ";
		}
		$list = D() -> query($sql);
		return $list;
	}

	private function _tab3($type,$start_date,$end_date) {
			$timesql = "";
		if($start_date && $end_date){
			$timesql = " and user_score_log.create_time > ".strtotime($start_date)." and user_score_log.create_time < ".(strtotime($end_date) + 24*60*60)." ";
		}elseif($start_date){
			$timesql = " and user_score_log.create_time > ".strtotime($start_date)." ";
		}elseif($end_date){
			$timesql = " and user_score_log.create_time < ".(strtotime($end_date) + 24*60*60)." ";
		}
		if ($type) {
			$sql = "select PO.name,
              (select sum(user.score) from user where user.status=1 and user.organization_id=PO.id) score,
              (select count(*) from user u3 where u3.organization_id=PO.id and u3.status=1) people_count,
              (select sum(user_score_log.score) from user_score_log  join user on user_score_log.uid=user.uid where user.status=1 and user.organization_id=PO.id and user_score_log.type in ($type) $timesql) count_score
              from party_organization PO order by count_score desc,score desc,name desc";
		} elseif ($timesql) {
			$sql = "select PO.name,
              (select sum(user.score) from user where user.status=1 and user.organization_id=PO.id) score,
              (select count(*) from user u3 where u3.organization_id=PO.id and u3.status=1) people_count,
              (select sum(user_score_log.score) from user_score_log  join user on user_score_log.uid=user.uid where user.status=1 and user.organization_id=PO.id $timesql) count_score
              from party_organization PO order by count_score desc,score desc,name desc";
		} else {
			$sql = "select PO.name,
              (select sum(user.score) from user where user.status=1 and user.organization_id=PO.id) score,
               (select count(*) from user u3 where u3.organization_id=PO.id and u3.status=1) people_count
              from party_organization PO order by score desc,name desc ";
		}
		$list = D() -> query($sql);
		return $list;
	}

	public function ajaxDetail($id = 0) {
		$detail = D('StudyStandingBook') -> find($id);
		ajaxMsg(0, '成功', $detail);
	}

	public function ajaxDelete($id = 0) {
		D('StudyStandingBook') -> delete($id);
		ajaxMsg(0, '已删除');
	}

	public function performance() {
        $auth = session_auth();
        if($auth == 1){
            $this -> set_sidebar_sub('performance');
            $keyword = I('keyword');
            $searchKey = array();
            $search['User.status'] = array('gt', -1);

            if ($keyword) {
                $search['User.realname'] = array('like', "%$keyword%");
                $searchKey['keyword'] = $keyword;
            }
            $post_id = I('post_id');
            if ($post_id) {
                $search['User.post_id'] = $post_id;
                $searchKey['post_id'] = $post_id;
            }
            $branch_id = I('branch_id');
            if ($branch_id) {
                $search['User.branch_id'] = $branch_id;
                $searchKey['branch_id'] = $branch_id;
            }
            $role_id = I('role_id');
            if ($role_id) {
                $search['User.role_id'] = $role_id;
                $searchKey['role_id'] = $role_id;
            } else {
                $search['User.role_id'] = array('EXP', 'IS NOT NULL');
            }
            $this -> assign('search', $searchKey);

            $page = D('Common/UserView')->find_page($search, "", "", "User.uid desc", 15);
            foreach ($page['list'] as $index => $item) {
                $sum = D('UserScoreLog')->where(array("uid"=>$item['uid'], "type"=>8))->sum('score');
                if ($sum == "" || $sum == null) {
                    $sum = 0;
                }
                $item['performance_score'] = $sum;
                $page['list'][$index] = $item;
            }

            $roles = D('Role') -> select();
            $posts = D('Post') -> select();
            $branchs = D('PartyBranch') -> select();
            $this -> assign('roles', $roles);
            $this -> assign('posts', $posts);
            $this -> assign('branchs', $branchs);
            $this -> assign('page', $page);
        }
        $this -> display();
	}

	public function ajaxSavePerformanceScore() {
		$uid = I('uid');
		$score = I('score');
		if ($uid > 0 && ($score > 0 || $score < 0)) {
            update_user_score($uid, $score, 8);
            ajaxMsg(0,"绩效已录入");
		} else {
            ajaxMsg(1,"绩效积分不能为0");
		}
	}

    public function performanceDetail() {
        $auth = session_auth();
        if($auth == 1){
            $this -> set_sidebar_sub('performance');
            $uid = I('uid');
            $user = D('User')->find($uid);
            $page = D('UserScoreLogView')->findPage(array('uid'=>$uid, 'type'=>8), 15, 'create_time desc');
//            exit("aaa = ".to_json_string($page));
            $this -> assign('userRealname', $user['realname']);
            $this -> assign('page', $page);
        }
        $this -> display();
    }


}
