<?php
namespace Admin\Controller;
use Common\Controller\BaseController;
use Common\Util\ImageUploadUtil;
use Think\Controller;
use Weixin\Util\QYConfig;
use Admin\Util\AdminUtil;

/**
 * 奖励机制管理
 * Class SystemController
 * @package Admin\Controller
 */
class RewardController extends BaseAdminController
{
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->set_sidebar_module('Reward');
    }

    // 奖励机制商品列表页
    public function index()
    {
        $this->set_sidebar_sub('Reward');
        $keyword = I('keyword');
        if ($keyword) {
            $page = D('Reward')->findPage("name like '%$keyword%'", 15, 'sort desc');
            $this->assign('search', array('keyword'=>$keyword));
        } else {
            $page = D('Reward')->findPage("", 15, 'id desc');
        }
        foreach ($page['list'] as &$item){
            //2 2 领取兑换成功 1 审核通过 0未审核  -1申请驳回  -2放弃领取
            if($item['id']){
                //放弃领取人数
                $item['giveup_count'] = D('RewardList')->where(array('good_id'=>$item['id'],'status'=>-2))->count();
                //已申请人数
                $item['apply_count'] = D('RewardList')->where(array('good_id'=>$item['id'],'status'=>0))->count();
                //审核通过人数
                $item['verify_count'] = D('RewardList')->where(array('good_id'=>$item['id'],'status'=>1))->count();
                //已领取兑换成功人数
                $item['reward_count'] = D('RewardList')->where(array('good_id'=>$item['id'],'status'=>2))->count();
            }
            //库存
            $item['stock'] = $item['total_count'] - $item['apply_count'] - $item['verify_count']- $item['reward_count'];
        }
        $this->assign('page', $page);
        $this->display();
    }
    //添加编辑页
    public function rewardAdd(){
//        $this->set_sidebar_sub('Reward');

        $id = I('id');
        if ($id) { //如果是编辑
            $detail = D('Reward')->find($id);
            $this->assign('detail', $detail);
        }
        $Rewards = D('Reward')->select();
        $this->assign('Rewards', $Rewards);
        $this->assign('p', I('get.p', 1));
        $this->display();
    }

    //兑换申请列表
    public function rewardDetail(){
        $keyword = I('keyword');
        if ($keyword) {
            $page = D('RewardList')->findPage("name like '%$keyword%'", 15, 'sort desc');
            $this->assign('search', array('keyword'=>$keyword));
        } else {
            //status  2 领取兑换成功 1 审核通过 0未审核  -1申请驳回  -2放弃领取
            $map['status'] = array('between', array(-1, 1));
            $page = D('RewardList')->findPage($map, 15, 'id desc');
        }
        foreach($page['list'] as &$item){
            $item['branch_name'] = D('PartyBranch')->where(array('uid'=>$item['uid']))->field('name')->find();
        }
        $this->assign('page', $page);
        $this->display();
    }

    //审核
    public function verify(){
        $user = user();
        $id = I('id');
        $status = I('status');
        $point= I('point');
        if ($status == 1){
            //先判断是不是已经是通过状态
            $statusdata =  D('RewardList')->where(array('id'=>$id))->find();
            if($statusdata['status'] == 1){
                ajaxMsg(1, '已经是通过了！');
            }
        }
        if ($status == -1){
            //先判断是不是已经是不通过状态
            $statusdata =  D('RewardList')->where(array('id'=>$id))->find();
            if($statusdata['status'] == -1){
                ajaxMsg(1, '已经是不通过了！');
            }
            //退回积分
            $over_score = $user['able_score'] + $point;
            $array = array('able_score'=>$over_score);
            $result = D('User')->where(array('uid'=>$user['uid']))->save($array);
        }
        $array = array(
            'status'=> $status
        );
        if($id){
            D('RewardList')->where(array('id'=>$id))->save($array);
            ajaxMsg(0, '保存成功');
        }

    }
    //领取列表操作  领取 未领取 弃领
    public function make_receive(){
        $user = user();
        $id = I('id');
        $status = I('status');
        $type = I('type');
        $point = I('point');

        //弃领
        if($type){
            //先判断是不是已经是弃领状态
            $statusdata =  D('RewardList')->where(array('id'=>$id))->find();
            if($statusdata['status'] == -2){
                ajaxMsg(1, '已经是弃领了哦！');
            }
            //退回积分
            $over_score = $user['able_score'] + $point;
            $array = array('able_score'=>$over_score);
            $result = D('User')->where(array('uid'=>$user['uid']))->save($array);

            $array = array(
                'status'=> $status,
                'giveup_time'=> time(),
                 'receive_time'=> ''
            );
        }elseif($status == 2){//领取
            //先判断是不是已经是领取状态
            $statusdata =  D('RewardList')->where(array('id'=>$id))->find();
            if($statusdata['status'] == 2){
                ajaxMsg(1, '已经是领取了哦！');
            }
            //扣除积分
            if($user['able_score'] < $point){
                ajaxMsg(1, '积分不足！');
            }
//            $over_score = $user['able_score'] - $point;
//            $array = array('able_score'=>$over_score);
//            $result = D('User')->where(array('uid'=>$user['uid']))->save($array);

            $array = array(
                'status'=> $status,
                'receive_time'=> time(),
                'giveup_time'=> '',
            );
        }else{
            //先判断是不是已经是未领取状态
            $statusdata =  D('RewardList')->where(array('id'=>$id))->find();
            if($statusdata['status'] == 1){
                ajaxMsg(1, '已经是未领取了哦！');
            }
            $array = array(
                'status'=> $status,
                'receive_time'=> '',
                'giveup_time'=> '',
            );
        }
        if($id){
            D('RewardList')->where(array('id'=>$id))->save($array);
            ajaxMsg(0, '保存成功');
        }

    }

    //领取列表
    public function receive(){
        $keyword = I('keyword');
        if ($keyword) {
            $page = D('RewardList')->findPage("name like '%$keyword%'", 15, 'sort desc');
            $this->assign('search', array('keyword'=>$keyword));
        } else {
            //status  2 领取兑换成功 1 审核通过 0未审核  -1申请驳回  -2放弃领取
            $map['status'] = array('not between',array(-1,0));
            $page = D('RewardList')->findPage($map, 15, 'id desc');
        }
        foreach($page['list'] as &$item){
            $item['branch_name'] = D('PartyBranch')->where(array('uid'=>$item['uid']))->field('name')->find();
        }
        $this->assign('page', $page);
        $this->display();
    }

    public function ajaxAddReward(){
        $id = I('id');
        $name = I('name');
        $point = I('point');
        $img_url = I('img_url');
        $status = I('status');
        $total_count = I('total_count');
        if (!$name) {
            ajaxMsg(1, '请先填写商品名称');
        }
        $array = array(
            'point'=>$point,
            'name' => $name,
            'img_url' => $img_url,
            'status' => $status,
            'total_count' => $total_count,
            'create_time'=>time()
        );
        if ($id) {
            D('Reward')->where(array('id'=>$id))->save($array);
        }else {
            $id =  D('Reward')->add($array);
        }
        ajaxMsg(0, '保存成功');
    }
    // 删除商品
    public function ajaxDec()
    {
        $id = I('post.id');
        D('Reward')->where(array('id' => $id))->delete();
        ajaxMsg(0, "已删除");
    }
}
