<?php
namespace Admin\Controller;

use Think\Controller;
use Todo\Util\TodoUtils;
use Weixin\Util\PayUtils;

/**
 * 文章管理
 * Class ContentController
 * @package Home\Controller
 */
class CostController extends BaseAdminController
{
	function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
		$this->set_sidebar_module('Cost');
	}
	public function infoUsers()
	{
		$this->set_sidebar_sub('index');
		$branchId = I('branch_id');

		$years = D('PartyFee')->field('year')->group('year')->select();
		$this->assign('years',$years);


		$year = I("year");
		$keyword = I("keyword");
		if($year){
			$map['PartyFee.year']=$year;
		}
		if($keyword){
			$map['User.realname']=array('like','%'.$keyword.'%');
		}
		$map['PartyFee.id'] = I('id');
		if($branchId){//传入branchId
			//权限展示列表

			$map['PartyFee.branch_id'] = $branchId;

			//权限展示列表
		}else{
			$admin = admin();
			$auth = session_auth();
			$map = array();
			if($auth == 2){//总支
				$map['PartyBranch.branch_hq_id'] = $admin['admin_branch_hq_id'];
			}
			if($auth == 3){//总支
				$map['PartyFee.branch_id'] = $admin['admin_branch_id'];
			}
		}


		$map['User.status'] = 1;

		$search = array('year'=>$year,'keyword'=>$keyword);
		$this->assign('search',$search);
		$this->assign('detail',D('PartyFee')->find(I('id')));


		$list = D('PartyFeeUserView')->where($map)->order("PayOrder.pay_time desc, PayOrder.status desc, User.post_id desc")->select();
		$this->assign('list',$list);
		$this->display();
	}

	public function infoUserEdit(){
		$this->set_sidebar_sub('index');
		$id = I('id');
		$detail = D('PartyFeeUserView')->where(array("PartyFeeUser.id"=>$id))->find();

		$fee_id = $detail['fee_id'];
		$branch_id = $detail['user_branch_id'];
		$url = __ROOT__."/Admin/Cost/infoUsers?id=$fee_id&branch_id=$branch_id";
		$this->assign('url',$url);
		$this->assign('detail',$detail);
		$this->display();
	}
	public function ajaxSaveInfoUser(){
		$id = I('id');
		$fee = I('fee',0);
		$status = I('status',0);


		$detail = D('PartyFeeUser')->find($id);

		if($detail){
			//查找订单
			$order = D('PayOrder')->find($detail['order_id']);
			if($order['fee'] != $fee){//如果金额不一致，创建新的订单
				$neworder = PayUtils::make_order($order['uid'],$fee,$order['body'],$order['title']);
				PayUtils::order_save_resource($neworder['id'],$order['type'],$order['resource_id']);
				$url = "/Weixin/Weixinpay/pay?state=".$neworder['out_trade_no'];
				TodoUtils::set_url($order['resource_id'],'COST',$url);
				D('PayOrder')->where(array('id'=>$neworder['id']))->save(array('status'=>$status));
			}
			//修改代办的url 和状态
			TodoUtils::set_status($order['resource_id'],'COST',$status);
			//保存orderId
			D('PartyFeeUser')->where(array('id'=>$id))->save(array('fee'=>$fee,'order_id'=>$order['id']));
			//标记订单状态
			D('PayOrder')->where(array('id'=>$order['id']))->save(array('status'=>$status));
		}
		ajaxMsg(0,"");
	}

	public function ajaxAddFee(){
		$feeName = I('name');
		$path = I('import_path');
		$year = I('year');
		if(!$feeName){
			ajaxMsg(1,"请填写缴费名称");
		}
		if(!$path){
			ajaxMsg(1,"请先选择文件");
		}

		//解析Excel

		vendor("PHPExcel.PHPExcel");//如果这里提示类不存在，肯定是你文件夹名字不对。
		//保存的excel
//		$Excelw = new \PHPExcel();
		//读取的
		$file = $_SERVER['DOCUMENT_ROOT'] . __ROOT__ . '/Uploads/'.$path;
		$PHPReader = new \PHPExcel_Reader_Excel5();
		// 载入文件
		$Excel = $PHPReader->load($file);


//            ajaxMsg(1, '1');
		//获取表中的第一个工作表，如果要获取第二个，把0改为1，依次类推
		$currentSheet = $Excel->getSheet(0);
		//获取总列数
		$allColumn = $currentSheet->getHighestColumn();
		//获取总行数
		$allRow = $currentSheet->getHighestRow();

		$feeNameId = D('PartyFeeName')->add(array('name'=>$feeName, 'create_time'=>time(), 'import_path'=>$path, 'year'=>$year));

		$todo = array(
			'issuer_uid'=>admin_uid(),
			'title'=> $feeName,
			'type'=>'COST',
			'content'=>$feeName,
			'receiver_roles'=>'0',
			'receiver_branchs'=>'0'
		);
		$todo_id = TodoUtils::add_todo($todo);

		//循环获取表中的数据，$currentRow表示当前行，从哪行开始读取数据，索引值从0开始
		for ($currentRow = 2; $currentRow <= $allRow; $currentRow++) {
			//姓名
//			$name = $currentSheet
//				->getCell('A' . $currentRow)
//				->getValue();
			//电话
			$mobile = $currentSheet
				->getCell('B' . $currentRow)
				->getValue();
			//fee
			$fee = $currentSheet
				->getCell('C' . $currentRow)
				->getValue();

			//获取该用户
			$user = D('User')->where(array('mobile'=>$mobile))->find();
			if($user){

				//判断 user 的支部季度记录是否存在
				$branchFee = D('PartyFee')->where(array('branch_id'=>$user['branch_id'],'fee_name_id'=>$feeNameId))->find();
				if(!$branchFee){
					$fee_id = D('PartyFee')->add(array('branch_id'=>$user['branch_id'],'end_date'=>strtotime("+1 month"),'fee_name_id'=>$feeNameId,'name'=>$feeName,'year'=>$year));
				}else{
					$fee_id = $branchFee['id'];
				}

//				每个党员生成一条数据

				$order = PayUtils::make_order($user['uid'], $fee, $feeName,'党费缴纳');
				$fee_user_id = D('PartyFeeUser')->add(array(
					'fee_id'=>$fee_id,
					'fee'=>$fee,
					'uid'=>$user['uid'],
					'create_time'=>time(),
					'wage'=>$user['wage'],
					'order_id'=>$order['id']));
				PayUtils::order_save_resource($order['id'],'COST',$fee_user_id);
				$url = "/Weixin/Weixinpay/pay?state=".$order['out_trade_no'];
				TodoUtils::add_todo_status($fee_user_id,'COST',$todo_id,$user['uid'],$url);
			}
		}

		ajaxMsg(0,"success");

	}

	public function add(){
		$this->set_sidebar_sub('fee');
		$year = Date('Y');
		$years = array();
		for($i = -2; $i<6; $i++){
			$years[] = $year + $i;
		};
		$this->assign('years',$years);
		$this->display();
	}

	public function fee(){

		$this->set_sidebar_sub('fee');

		$years = D('PartyFeeName')->field('year')->group('year')->select();
		$this->assign('years',$years);


		$year = I("year");
		$keyword = I("keyword");
		if($year){
			$map['year']=$year;
		}
		if($keyword){
			$map['name']=array('like','%'.$keyword.'%');
		}
		$search = array('year'=>$year,'keyword'=>$keyword);
		$this->assign('search',$search);


		$page = D('PartyFeeNameView')->findPage($map,15,"PartyFeeName.create_time desc");

		foreach($page['list'] as $index=>$item){
			$nameId = $item['id'];
			$total_count = D('PartyFeeUserView')->where("PartyFeeName.id=$nameId")->count();
			$has_pay_count = D('PartyFeeUserView')->where("PartyFeeName.id=$nameId and PayOrder.status=1")->count();
			$total_pay = D('PartyFeeUserView')->where("PartyFeeName.id=$nameId")->sum("PayOrder.total_fee");
			$has_pay = D('PartyFeeUserView')->where("PartyFeeName.id=$nameId and PayOrder.status=1")->sum("PayOrder.total_fee");
			$item['total_count'] = $total_count;
			$item['has_pay_count'] = $has_pay_count;
			$item['total_pay'] = $total_pay?$total_pay:0;
			$item['has_pay'] = $has_pay?$has_pay:0;
			$page['list'][$index] = $item;

		}

		$this->assign('page',$page);
		$this->display();
	}

    public function index()
    {
		$this->set_sidebar_sub('index');
		$years = D('PartyFeeName')->field('year')->group('year')->select();
		$this->assign('years',$years);
		$map = array();
		$year = I("year");
		$keyword = I("keyword");
		if($year){
			$map['PartyFeeName.year']=$year;
		}

        $admin = admin();
        $auth = session_auth();

        if($auth == 2){//总支
            $map['PartyBranch.branch_hq_id'] = $admin['admin_branch_hq_id'];
        }
        if($auth == 3){//总支
            $map['PartyFee.branch_id'] = $admin['admin_branch_id'];
        }


		if($keyword){
			$map['PartyFeeName.name']=array('like','%'.$keyword.'%');
		}
		$search = array('year'=>$year,'keyword'=>$keyword);
		$this->assign('search',$search);

		$page = D('PartyFeeView')->find_page($map,'','PartyFee.id',"PartyFee.year desc, PartyFee.name asc");

		foreach($page['list'] as $index=>$item){
			$nameId = $item['id'];
            $map2 = array();
            if($auth == 1){//总支
            }elseif($auth == 2){//总支
                $map2['PartyBranch.branch_hq_id'] = $admin['admin_branch_hq_id'];
            }elseif($auth == 3){//总支
                $map2['PartyFee.branch_id'] = $admin['admin_branch_id'];
            }
            $map2['PartyFee.id'] = $nameId;

			$total_count = D('PartyFeeUserView')->where($map2)->count();
            $total_pay = D('PartyFeeUserView')->where($map2)->sum("PayOrder.total_fee");
            $map2['PayOrder.status'] = 1;
			$has_pay_count = D('PartyFeeUserView')->where($map2)->count();
			$has_pay = D('PartyFeeUserView')->where($map2)->sum("PayOrder.total_fee");
			$item['total_count'] = $total_count;
			$item['has_pay_count'] = $has_pay_count;
			$item['total_pay'] = $total_pay?intval($total_pay*100)/100:0;
			$item['has_pay'] = $has_pay?$has_pay:0;
			$page['list'][$index] = $item;

		}
		$this->assign('page',$page);
		$this->display();
    }

	public function info()
	{

		$this->set_sidebar_sub('fee');

		$id = I('get.id');
		$detail = D("PartyFeeName")->find($id);
		$this->assign('detail',$detail);


		$map = array();
		$map['PartyFee.fee_name_id']=$id;
		$year = I("year");
		$keyword = I("keyword");
		if($year){
			$map['PartyFee.year']=$year;
		}
		if($keyword){
			$map['PartyBranch.name']=array('like','%'.$keyword.'%');
		}

		$admin = admin();
		$auth = session_auth();

		if($auth == 2){//总支
			$map['PartyBranch.branch_hq_id'] = $admin['admin_branch_hq_id'];
		}
		if($auth == 3){//总支
			$map['PartyFee.branch_id'] = $admin['admin_branch_id'];
		}

		$search = array('year'=>$year,'keyword'=>$keyword);
		$this->assign('search',$search);


		$page = D('PartyFeeView')->find_page($map,'','PartyFee.branch_id',"PartyBranch.name asc");

		foreach($page['list'] as $index => $item){
			$id = $item['id'];
			//已付款
			$item['has_pay'] = D('PartyFeeUserView')->where(array('PartyFeeUser.fee_id'=>$id,'PayOrder.status'=>1))->sum("PayOrder.total_fee");
			$item['has_pay_count'] = D('PartyFeeUserView')->where(array('PartyFeeUser.fee_id'=>$id,'PayOrder.status'=>1))->count();
			$item['has_pay'] =  $item['has_pay']? $item['has_pay']:0;
			//未付款人数
			$item['un_pay_count'] = D('PartyFeeUserView')->where(array('PartyFeeUser.fee_id'=>$id,'PayOrder.status'=>0))->count();
			$item['un_pay'] = D('PartyFeeUserView')->where(array('PartyFeeUser.fee_id'=>$id,'PayOrder.status'=>0))->sum("PayOrder.total_fee");
			$item['un_pay'] =  $item['un_pay']? $item['un_pay']:0;
			//总款
			$item['total_pay'] =  $item['un_pay'] + $item['has_pay'];
			$item['total_count'] =  $item['un_pay_count'] + $item['has_pay_count'];
			$page['list'][$index] = $item;
		}


		$this->assign('page',$page);
		$this->display();
	}

}