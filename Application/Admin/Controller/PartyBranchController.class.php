<?php
namespace Admin\Controller;

use Common\Controller\BaseController;
use Common\Util\ImageUploadUtil;
use Think\Controller;
use Weixin\Util\QYConfig;
use Admin\Util\AdminUtil;

/**
 * 支部管理
 * Class SystemController
 * @package Admin\Controller
 */
class PartyBranchController extends BaseAdminController
{
    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->set_sidebar_module('PartyBranch');
    }

    // 支部列表页
    public function index()
    {
        $this->set_sidebar_sub('index');
        // 获得所有符合条件的支部
        $keyword = I('keyword');
        $map = array();
        if ($keyword) {
            $map['PartyBranch.name'] = array('like',"%".$keyword."%");
            $this->assign('search', array('keyword'=>$keyword));
        }
        $admin = admin();
        $auth = session_auth();
        if($auth == 2){//总支
            $map['PartyBranch.branch_hq_id'] = $admin['admin_branch_hq_id'];
        }
        if($auth == 3){//支
            $map['PartyBranch.id'] = $admin['admin_branch_id'];
        }

        $page = D('PartyBranchView')->find_page($map,"", "PartyBranch.id","PartyBranch.sort desc",15);

        // 遍历筛选出来的支部，统计各支部的党员数量和委员组成
        $partybranchId = C('ROLE_PARTY_ID');
        foreach ($page['list'] as $index => $item) {
            // 统计各支部党员数量
            $itemid = $item['id'];
            //获取书记
            // $sjUser = D('UserView')->where("Post.code='SJ' and User.branch_hq_id is null and PartyBranch.id=$itemid")->find();
            $sjUser = D('UserView')->where(array('post_id'=>1,'branch_id'=>$itemid))->find();
            $item['sj_realname'] = $sjUser['realname'];
			$item['total_count'] = D('User')->where("branch_id=$itemid")->count();
            $count = D('User')->where("branch_id=$itemid and role_id=$partybranchId and status=1")->count();
            $total_point = D('User')->where("branch_id=$itemid and status=1")->sum('score');
            $total_point = $total_point?$total_point:0;
            $weiyuans = D('UserView')->where("User.branch_id=$itemid and User.branch_hq_id is null and post_id>1")->select();//委员列表
            $item['wys'] = $weiyuans;
            $item['party_count'] = $count;
            $item['total_point'] = $total_point;
            $page['list'][$index] = $item;

            //获取对应上级组织
            $work_id = $item['work_id'];
            $working_id = $item['working_id'];
            if($working_id){//党工委
                $page['list'][$index]['h_working_level'] = D('PartyWorking')->where("id=$working_id")->field('name')->find();
            }
            if($work_id){//党组
                $page['list'][$index]['h_work_level'] = D('PartyOrganization')->where("id=$work_id")->field('name')->find();
            }

        }
        $this->assign('page', $page);
        $this->display();
    }
    // 支部列表页
    public function hq()
    {
        $this->set_sidebar_sub('hq');
        // 获得所有符合条件的支部
        $keyword = I('keyword');
        if ($keyword) {
            $page = D('PartyBranchHq')->findPage("name like '%$keyword%'", 15, 'sort desc');
            $this->assign('search', array('keyword'=>$keyword));
        } else {
            $page = D('PartyBranchHq')->findPage("", 15, 'sort desc');
        }

        // 遍历筛选出来的支部，统计各支部的党员数量和委员组成
        $partybranchId = C('ROLE_PARTY_ID');
        foreach ($page['list'] as $index => $item) {
            // 统计各支部党员数量
            $itemid = $item['id'];
            $itemView = D('UserView')->where("Post.code='SJ' and User.branch_hq_id=$itemid")->find();
            $item['sj_realname'] = $itemView['realname'];
            $count = D('UserView')->where("PartyBranch2.branch_hq_id=$itemid and role_id=$partybranchId and User.status=1")->count();
//          $weiyuans = D('UserView')->where("User.branch_hq_id=$itemid and post_id>1")->select();//委员列表
//          $item['wys'] = $weiyuans;
            $item['party_count'] = $count;
			$item['total_count'] = D('UserView')->where("PartyBranch2.branch_hq_id=$itemid and User.status=1")->count();

			$item['branch_count'] = D('PartyBranch')->where("branch_hq_id=$itemid")->count();
            $page['list'][$index] = $item;

            //获取对应上级组织
            $work_id = $item['work_id'];
            $working_id = $item['working_id'];
            if($working_id){
                $page['list'][$index]['h_working_level'] = D('PartyWorking')->where("id=$working_id")->field('name')->find();
            }
            if($work_id){
                $page['list'][$index]['h_work_level'] = D('PartyOrganization')->where("id=$work_id")->field('name')->find();
            }

        }

        $this->assign('page', $page);
        $this->display();
    }

    function ajaxUploadHead(){

        ajaxMsg(0, "success", ImageUploadUtil::upload("user/head/",'file',array('width'=>200,'height'=>200),array('width'=>80,'height'=>80)));
    }
    function ajaxUploadCover(){

        ajaxMsg(0, "success", ImageUploadUtil::upload("branch/cover/",'file',array('width'=>200,'height'=>200),array('width'=>80,'height'=>80)));
    }

    public function ajaxImportUser()
    {

        $upload = new \Think\Upload();// 实例化上传类
        $upload->maxSize = 20 * 1024 * 1024;// 设置附件上传大小
        $upload->exts = array('xls');// 设置附件上传类型
        $upload->rootPath = './Uploads/'; // 设置附件上传根目录
        $upload->savePath = 'excel/'; // 设置附件上传（子）目录
        $upload->subName = '';
        $upload->saveName = 'users';
        $upload->replace = true;
        $file = $_FILES['file'];

        $info = $upload->uploadOne($file);
        if (!$info) {// 上传错误提示错误信息
            ajaxMsg(1, '上传文件过大了');
        } else {
            vendor("PHPExcel.PHPExcel");//如果这里提示类不存在，肯定是你文件夹名字不对。
            //保存的excel
            //读取的
            $file = $_SERVER['DOCUMENT_ROOT'] . __ROOT__ . '/Uploads/excel/users.xls';
            $PHPReader = new \PHPExcel_Reader_Excel5();
            // 载入文件
            $Excel = $PHPReader->load($file);

//            ajaxMsg(1, '1');
            //获取表中的第一个工作表，如果要获取第二个，把0改为1，依次类推
            $currentSheet = $Excel->getSheet(0);
            //获取总列数
            $allColumn = $currentSheet->getHighestColumn();
            //获取总行数
            $allRow = $currentSheet->getHighestRow();

            $userD = D('User');
            //循环获取表中的数据，$currentRow表示当前行，从哪行开始读取数据，索引值从0开始
            for ($currentRow = 2; $currentRow <= $allRow; $currentRow++) {


                //支部 已保存
                $branchName = $currentSheet
                    ->getCell('B' . $currentRow)
                    ->getValue();

                //姓名ok
                $realname = $currentSheet
                    ->getCell('C' . $currentRow)
                    ->getValue();
                //性别 ok
                $gender = $currentSheet
                    ->getCell('D' . $currentRow)
                    ->getValue();
                $gender = $gender?($gender=='男'?1:0):1;
                //民族ok
                //个人身份ok
               $role_str = $currentSheet
                 ->getCell('E' . $currentRow)
                 ->getValue();
                 if ($role_str == '党员') {
                     $role_id =1;
                 }elseif ($role_str == '预备党员') {
                     $role_id =2;
                 }elseif ($role_str == '拟发展对象') {
                     $role_id =3;
                 }elseif ($role_str == '入党积极分子') {
                    $role_id =4;
                 }else{
                    $role_id =5;
                 }
                $folk = $currentSheet
                    ->getCell('F' . $currentRow)
                    ->getValue();
                //籍贯ok
                $native_place = $currentSheet
                    ->getCell('G' . $currentRow)
                    ->getValue();
                //生日ok
                $birthday = $currentSheet
                    ->getCell('H' . $currentRow)
                    ->getValue();
                //工作日期ok
                $workday = $currentSheet
                    ->getCell('I' . $currentRow)
                    ->getValue();
                //身份证ok
                $idcard = $currentSheet
                    ->getCell('J' . $currentRow)
                    ->getValue();

                // 学历
                $education = $currentSheet
                    ->getCell('K' . $currentRow)
                    ->getValue();
					 //工作单位
                $work_unit = $currentSheet
                    ->getCell('L' . $currentRow)
                    ->getValue();
                //学位
                $degree = $currentSheet
                    ->getCell('K' . $currentRow)
                    ->getValue();

                //入党日期
                $activist_date = $currentSheet
                    ->getCell('M' . $currentRow)
                    ->getValue();
                $activist_date = strtotime($activist_date);
//转正日期
                $official_date = $currentSheet
                    ->getCell('N' . $currentRow)
                    ->getValue();
                $official_date = strtotime($official_date);
                //手机
                $mobile = $currentSheet
                    ->getCell('O' . $currentRow)
                    ->getValue();

//
				// $sort = $currentSheet
    //                 ->getCell('P' . $currentRow)
    //                 ->getValue();

                $baranch = D('PartyBranch')->where("name='$branchName'")->find();
// 'position'=>$position,
                $user = array(
                	// 'sort'=>intval($sort),
                    'role_id'=>$role_id,
                    'realname'=>$realname,
                    'gender'=>$gender,
                    'folk'=>$folk,
                    'native_place'=>$native_place,
                    'birthday'=>$birthday."",
                    'work_day'=>$workday,
                    'idcard'=>$idcard,
                    'work_status'=>$work_status,
                    'education'=>$education,
                    'degree'=>$degree,
                    'front_line'=>$front_line,

                    'work_unit'=>$work_unit,
                    'unit_attribute'=>$unit_attribute,
                    'activist_date'=>$activist_date,
                    'official_date'=>$official_date,
                    'activist_add_date'=>$activist_add_date,
                    'activist_add_intro'=>$activist_add_intro,
                    'update_time'=>time(),
                    'mobile'=>$mobile,
                    );
                if ($baranch) {
                    $user['branch_id'] = $baranch['id'];
                }
                // else {
                //     $branch_id = D('PartyBranch')->add(array('name' => $branchName, 'last_change_time' => time()));
                //     $user['branch_id'] = $branch_id;
                // }

//                ajaxMsg(1, to_json_string($user));
//               $userD->where(array('mobile'=>$mobile))->save($user);
                $uid  = $userD->add($user);

//ajaxMsg(1, to_json_string($user));
              D('AdminAuthGroupAccess')->add(array('group_id' => 2, 'uid'=>$uid));
            }
            ajaxMsg(0, '上传成功');
        }

    }


    public function  ajaxGetUsers()
    {

        $id = I('id', 0);
        $keyword = I('keyword', '');
        $type = I('type','normal');
//        if($keyword){
//            $page = D('UserView')->findPage("User.branch_id is null and User.realname like '%$keyword%'",15,'PartyBranch.id desc');
//            $this->assign('keyword', $keyword);
//        }else{
//            $page = D('UserView')->findPage("User.branch_id is null",15,'PartyBranch.id desc');
//        }
        $partybranchId = C('ROLE_PARTY_ID');

        if ($id) {
            if($type == 'hq'){//总支部
                // $list = D('UserView')->where("PartyBranch.branch_hq_id=$id and User.status=1 and User.role_id=$partybranchId and User.realname like '%$keyword%'")->order('User.realname asc')->limit(0, 20)->select();
                $list = D('UserView')->where("User.realname like '%$keyword%'")->order('User.realname asc')->limit(0, 20)->select();
            }else{
                // $list = D('UserView')->where("User.branch_id=$id and  User.status=1 and User.role_id=$partybranchId and User.realname like '%$keyword%'")->order('User.realname asc')->limit(0, 20)->select();
                $list = D('UserView')->where("User.realname like '%$keyword%'")->order('User.realname asc')->limit(0, 20)->select();
            }

        } else {
                // $list = D('UserView')->where("User.branch_id is null and post_id is null and User.role_id=$partybranchId and User.realname like '%$keyword%'")->order('User.realname asc')->limit(0, 20)->select();
            $list = D('UserView')->where("User.realname like '%$keyword%'")->order('User.realname asc')->limit(0, 20)->select();
        }
        //        ajaxMsg(1, to_json_string($list));
        foreach ($list as $index => $item) {
            $uid = $item["uid"];
            $realname = $item['realname'];
            $branch_name = $item['branch_name'];
            $post_name = $item['post_name'];
            if ($id == 0 && $item['post_id']) {
                $name = $item['realname'] . $item['mobile'] . "[$branch_name --- $post_name]";
                $item['html'] = "<div class='item un' data-id='$uid'>$name<div class='item-right'>已有职务</div></div>";
            } elseif ($id > 0 && $type == 'hq' && $item['post_id'] && !$item['branch_hq_id']) {
                $name = $item['realname'] . $item['mobile'] . "[$branch_name --- $post_name]";
                $item['html'] = "<div class='item un' data-id='$uid'>$name<div class='item-right'>已有职务</div></div>";
            } else {
                if (!$item['branch_id']) {
                    $name = $item['realname'] . $item['mobile'] . "[未加入支部]";
                    $item['html'] = "<a style='color: black;cursor: pointer;'><div class='item canselect' data-id='$uid' data-name='$realname'>$name</div></a>";
                } elseif ($id > 0 && $type == 'hq') {
                    $name = $item['realname'] . $item['mobile'] . "[$branch_name]";
                    $item['html'] = "<a style='color: black;cursor: pointer;'><div class='item canselect' data-id='$uid' data-name='$realname'>$name</div></a>";
                } elseif ($id > 0 && $item['branch_id'] != $id) {
                    $name = $item['realname'] . $item['mobile'] . "[$branch_name]";
                    $item['html'] = "<div class='item un' data-id='$uid' >$name<div class='item-right'>非此支部</div></div>";
                } elseif ($id > 0 && $item['branch_id'] == $id) {
                    if($item['branch_hq_id']){
                        $name = $item['realname'] . $item['mobile'] . "[$branch_name --- ".$item['branch_hq_name']."/$post_name]";
                        $item['html'] = "<div class='item un' data-id='$uid'>$name<div class='item-right'>已有职务</div></div>";
                    }else{
                        $name = $item['realname'] . $item['mobile'] . "[$branch_name]";
                        $item['html'] = "<a style='color: black;cursor: pointer;'><div class='item canselect' data-id='$uid' data-name='$realname'>$name</div></a>";
                    }
                } elseif ($item['branch_id']) {
                    $name = $item['realname'] . $item['mobile'] . "[$branch_name]";
                    $item['html'] = "<div class='item un' data-id='$uid' data-name='$realname'>$name<div class='item-right'>非此支部</div></div>";
                }
            }
            $list[$index] = $item;
        }

        ajaxMsg(0, 'success', $list);

    }

    public function ajaxDecAdm(){
        $id = I('id');
        $adm = D('PartyBranchAdm')->where(array('id'=>$id))->find();
        D('AdminAuthGroupAccess')->where(array('uid'=>$adm['uid']))->save(array('group_id'=>4));
        D('PartyBranchAdm')->where(array('id'=>$id))->delete();
        ajaxMsg(0,'success');
    }

    public function adms(){
        $id = I('id');
        $auth = AdminUtil::auth();
        if ($auth == 3) {
            $branch = AdminUtil::auth_branch();
            $id = $branch['id'];
        }
        $detail = D('PartyBranch')->find($id);
        $this->assign('detail',$detail);
        $this->assign('page', D('PartyBranchAdmView')->findPage("PartyBranchAdm.branch_id=$id",15,""));
        $this->display();
    }
    public function admEdit(){
        $id = I('id');
        $detail = D('PartyBranch')->find($id);
        $this->assign('detail',$detail);
        $this->display();
    }
    public function ajaxSaveAdm(){
        $detail_id = I('detail_id');
        $adm_uid = I('adm_uid');
        $adm = D('PartyBranchAdm')->where(array('uid'=>$adm_uid))->find();
        if($adm){
        	$branch =D('PartyBranch')->where(array('id'=>$adm['branch_id']))->find();
            ajaxMsg(1,"该用户已设置为{$$branch['name']}的管理员了");
        }
		D('AdminAuthGroupAccess')->where(array('uid'=>$adm_uid))->delete();
        D('AdminAuthGroupAccess')->add(array('uid'=>$adm_uid,'group_id'=>3));
        D('PartyBranchAdm')->add(array('branch_id'=>$detail_id,'uid'=>$adm_uid));
        ajaxMsg(0,'');
    }

    public function  ajaxGetAdms()
    {

        $keyword = I('keyword', '');
        $list = D('UserBranchView')->where("User.status=1 and User.realname like '%$keyword%'")->group('User.uid')->order('User.realname asc')->limit(0, 20)->select();
        foreach ($list as $index => $item) {
            $uid = $item["uid"];
            $realname = $item['realname'];
            $branch_name = $item['branch_name'];
            if($branch_name){
                $name = $item['realname'].$item['mobile'] . "[$branch_name]";
            }else{
                $name = $item['realname'].$item['mobile'];
            }
            $item['html'] = "<a style='color: black;cursor: pointer;'><div class='item canselect' data-id='$uid' data-name='$realname'>$name</div></a>";
                if($item['branch_adm_uid']){
                        // $item['html'] = "<div class='item un' data-id='$uid' >$name<div class='item-right'>[{$item['branch_name']}-管理员]</div></div>";
                    $item['html'] = "<div class='item un' data-id='$uid' >$name<div class='item-right'>管理员</div></div>";
                }

            $list[$index] = $item;
        }

        ajaxMsg(0, 'success', $list);

    }


    // 添加新支部
    public function partyBranchAdd()
    {
        $this->set_sidebar_sub('index');
        $Organiza = D('PartyOrganization')->select();//取党工委列表
        $Working = D('PartyWorking')->select();//取党委列表
        $this->assign('Organiza',$Organiza);
        $this->assign('Working',$Working);
        $posts = D('Post')->select();
        $this->assign('p', I('p', 1));
        $this->assign('posts', $posts);
        $hqs = D('PartyBranchHq')->select();
        $this->assign('hqs', $hqs);
        $this->display();
    }
    // 添加新支部
    public function branchOut()
    {
        $this->set_sidebar_sub('users');
       $uid = I('uid');
        $detail = D('Common/UserView')->where(array('uid'=>$uid))->find();
        $this->assign('p', I('p', 1));
        $this->assign('detail', $detail);
        $this->display();
    }

    // 添加新支部
    public function ajaxBranchOut()
    {
        $uid = I('uid');
        $user = D('User')->find($uid);
        $auth = checkAuth($user['branch_id']);
        if($auth > 0){
            $branch = D('PartyBranch')->find($user['branch_id']);
            if($user['post_id'])
            $post = D('Post')->find($user['post_id']);
            $role = D('Role')->find($user['role_id']);
            $status = relation_change_log($user,0,$user['branch_id'],array('org_branch_name'=>$branch['name'],'post_name'=>$post['name'],'role_name'=>$role['name'],'out'=>I('target'),'reason'=>I('reason')),admin());
            if($status){
                ajaxMsg(0, "success");
            }else{
                ajaxMsg(1, "调出失败");
            }

        }else{
            ajaxMsg(1, "抱歉，你没有操作权限");
        }

    }

    // 添加新支部
    public function partyBranchHqAdd()
    {
        $this->set_sidebar_sub('hq');
        $Organiza = D('PartyOrganization')->select();//取党组列表
//        $Committee = D('PartyCommittee')->select();//取党委列表
        $Working = D('PartyWorking')->select();
        $this->assign('Working', $Working);
        $this->assign('Organiza',$Organiza);
//        $this->assign('Committee',$Committee);
        // $posts = D('Post')->select();
        $this->assign('p', I('p', 1));
        // $this->assign('posts', $posts);
        $this->display();
    }

    // 添加新支部
    public function ajaxBranchSave()
    {
//        ajaxMsg(1, to_json_string($_POST));
        $id = I('id');
        $name = I('name');
        $sort = I('sort');
        $work_id = I('work_id');
//        $working_id = I('working_id');
        $result = D('PartyOrganization')->where("id=$work_id")->field('working_id')->find();//根据work_id找
        if(!$sort){
            $sort = 0;
        }
        if (!$name)
            ajaxMsg(1, "请先填写名称");

        if ($id) {

        } else {
            $branch = array('sort'=> $sort, 'name' => $name, 'last_change_time' => time(),'work_id'=>$work_id, 'working_id'=>$result['working_id']);
            $hq_id = I('branch_hq_id');
            if($hq_id > 0){
                $branch['branch_hq_id'] = $hq_id;
            }
            $branch['cover'] = I('cover_path');
            $id = D('PartyBranch')->add($branch);
        }
        $posts = D('Post')->select();
        foreach ($posts as $item) {
            $uid = I("post-" . $item['id']);
            if ($uid) {
                //判断是否有职位
                $user = D('User')->find($uid);
                if ($user && !$user['post_id']) {
                    $user['post_id'] = $item['id'];
                    $user['branch_id'] = $id;
                    $user['update_time']=time();
                    D('User')->save($user);
                }
            }
        }


        ajaxMsg(0, "success");
    }
    // 添加新支部
    public function ajaxBranchHQSave()
    {
//        ajaxMsg(1, to_json_string($_POST));
        $id = I('id');
        $name = I('name');
        $sort = I('sort');
        $sj_uid = I("post-1");
        $adm_uid = I("post-2");
        $committee_id = I('committee_id');
        $work_id = I('work_id');
        $workingid = I('workingid');
        if(!$sort){
            $sort = 0;
        }
        if (!$name)
            ajaxMsg(1, "请先填写名称");


        if ($id) {

        } else {
            $id = D('PartyBranchHq')->add(array('sort'=>$sort,'committee_id'=>$committee_id, 'work_id' => $work_id,'working_id'=>$workingid, 'name' => $name,'sj_uid'=>$sj_uid,'adm_uid'=>$adm_uid, 'last_change_time' => time()));
        }
        // $posts = D('Post')->select();
        // foreach ($posts as $item) {
        //     $uid = I("post-" . $item['id']);
        //     if ($uid) {
        //         //判断是否有职位
        //         $user = D('User')->find($uid);
        //         if ($user && !$user['post_id']) {
        //             $user['post_id'] = $item['id'];
        //             $user['branch_hq_id'] = $id;
        //             $user['update_time'] = time();
        //             D('User')->save($user);
        //         }
        //     }
        // }


        ajaxMsg(0, "success");
    }

    // 换届
    public function ajaxBranchChange()
    {
//        ajaxMsg(1, to_json_string($_POST));
        $id = I('id');


        if ($id) {
            $posts = D('Post')->select();
            $oldmsg = "";
            $newmsg = "";
            foreach ($posts as $item) {
                //历史记录
                $post_id = $item['id'];
                $oldUser = D('User')->where("branch_id=$id and post_id=$post_id")->find();
                if ($oldUser) {
                    $oldmsg = $oldmsg . $item['name'] . ":" . $oldUser['realname'] . "  ";
                    $oldUid = $oldUser['uid'];

                    $save = array('post_id' => null,'update_time'=>time());
                    if($oldUser['adm_id'] == 8 || $oldUser['adm_id'] == 9){
                        $oldUser['is_leader'] = 1;
                    }
                    D('User')->where("uid=$oldUid")->save($save);
                } else {
                    $oldmsg = $oldmsg . $item['name'] . ":空     ";
                }


                $uid = I("post-" . $item['id']);
                if ($uid) {

                    $user = D('User')->find($uid);
                    if ($user['branch_id'] != $id) {
                        ajaxMsg(1, "请选择当前支部的成员");
                    }

                    if ($user) {
                        $user['post_id'] = $post_id;
                        $user['branch_id'] = $id;
                        $user['update_time'] = time();
                        if($item['type'] == 1){
                            $user['is_leader'] = 1;
                        }

                        D('User')->save($user);

                        $newmsg = $newmsg . $item['name'] . ":" . $user['realname'] . "  ";
                    } else {
                        $newmsg = $newmsg . $item['name'] . ":空     ";
                        D('User')->where("branch_id=$id and post_id=$post_id")->save(array("post_id" => null,'update_time'=>time()));
                    }
                } else {
                    $newmsg = $newmsg . $item['name'] . ":空     ";
                    D('User')->where("branch_id=$id and post_id=$post_id")->save(array("post_id" => null,'update_time'=>time()));
                }
            }
            $time = time();

            D('PartyBranchChangeLog')->add(array('create_time' => $time, 'branch_id' => $id, 'old_members' => $oldmsg, 'new_members' => $newmsg));

            D('PartyBranch')->where("id=$id")->save(array('last_change_time' => $time));


            ajaxMsg(0, "success");
        } else {
            ajaxMsg(1, "找不到该支部");

        }

    }

    // 换届
    public function ajaxBranchHQChange()
    {
//        ajaxMsg(1, to_json_string($_POST));
        $id = I('id');


        if ($id) {
            $posts = D('Post')->select();
            $oldmsg = "";
            $newmsg = "";
            foreach ($posts as $item) {
                //历史记录
                $post_id = $item['id'];
                $parth_hq = D('PartyBranchHq')->where(array('id'=>$post_id))->find();
                if ($parth_hq['sj_uid']) {
                    $oldUser = D('User')->where(array('uid'=>$parth_hq['sj_uid']))->find();
                }

                if ($oldUser) {
                    $oldmsg = $oldmsg . $item['name'] . ":" . $oldUser['realname'] . "  ";
                    $oldUid = $oldUser['uid'];
                    // D('User')->where("uid=$oldUid")->save(array('post_id' => null, 'branch_hq_id'=>null,'update_time'=>time()));
                } else {
                    $oldmsg = $oldmsg . $item['name'] . ":空     ";
                }


                $uid = I("post-" . $item['id']);
                if ($uid) {

                    $user = D('User')->find($uid);
//                    if ($user['branch_id'] != $id) {
//                        ajaxMsg(1, "请选择当前支部的成员");
//                    }

                    if ($user) {
                        $user['post_id'] = $post_id;
                        $user['branch_hq_id'] = $id;
                        D('User')->save($user);

                        $newmsg = $newmsg . $item['name'] . ":" . $user['realname'] . "  ";
                    } else {
                        $newmsg = $newmsg . $item['name'] . ":空     ";
                        // D('User')->where("branch_hq_id=$id and post_id=$post_id")->save(array("post_id" => null, 'branch_hq_id'=>null,'update_time'=>time()));
                    }
                } else {
                    $newmsg = $newmsg . $item['name'] . ":空     ";
                    // D('User')->where("branch_hq_id=$id and post_id=$post_id")->save(array("post_id" => null, 'branch_hq_id'=>null,'update_time'=>time()));
                }
            }
            $time = time();

            D('PartyBranchChangeLog')->add(array('create_time' => $time, 'branch_hq_id' => $id, 'old_members' => $oldmsg, 'new_members' => $newmsg));

            D('PartyBranchHq')->where("id=$id")->save(array('last_change_time' => $time,'sj_uid'=>$uid));


            ajaxMsg(0, "success");
        } else {
            ajaxMsg(1, "找不到该支部");

        }

    }

    public function ajaxBranchEdit()
    {
        $id = I('id');
        $name = I('name');
        $sort = I('sort');
        $committee_id = I('committee_id');
        $work_id = I('work_id');
//                ajaxMsg(1,to_json_string( I()));
        if($work_id){
            $result = D('PartyOrganization')->where("id=$work_id")->field('working_id')->find();
        }
        if(!$sort){
            $sort = 0;
        }
        if (!$name)
            ajaxMsg(1, "请先填写名称");


        if ($id) {
            $posts = D('Post')->select();
            foreach ($posts as $item) {
                //历史记录
                $post_id = $item['id'];
                $oldUser = D('User')->where("branch_id=$id and post_id=$post_id")->find();
                if ($oldUser) {
                    $oldUid = $oldUser['uid'];
                    D('User')->where("uid=$oldUid")->save(array('post_id' => null,'update_time'=>time()));
                }


                $uid = I("post-" . $item['id']);
                if ($uid) {

                    $user = D('User')->find($uid);
                    if ($user['branch_id'] != $id) {
                        ajaxMsg(1, "请选择当前支部的成员");
                    }

                    if ($user) {
                        $user['post_id'] = $post_id;
                        $user['branch_id'] = $id;
                        $user['update_time'] = time();
                        D('User')->save($user);

                    } else {
                        D('User')->where("branch_id=$id and post_id=$post_id")->save(array("post_id" => null,'update_time'=>time()));
                    }
                } else {
                    D('User')->where("branch_id=$id and post_id=$post_id")->save(array("post_id" => null,'update_time'=>time()));
                }
            }
            $time = time();

            $branch = array('sort'=>$sort, 'name'=>$name, 'last_change_time' => $time,'work_id'=>$work_id,'working_id'=>$result['working_id']);
            $hq_id = I('branch_hq_id');
            $branch['branch_hq_id'] = $hq_id;
            $branch['cover'] = I('cover_path');
            D('PartyBranch')->where("id=$id")->save($branch);


            ajaxMsg(0, "success");
        } else {
            ajaxMsg(1, "找不到该支部");

        }

    }
    //总支部成员
    public function hqmember(){
        $branch_hq_id = I('id');
        $Branch_hq =D('PartyBranchHqMembers')->where("branch_hq_id=$branch_hq_id")->select();
        $party_branch_hq =D('PartyBranchHq')->where("id=$branch_hq_id")->field('name')->find();
        $Branch_hq = dutyorder($Branch_hq);//按职务排序
        $this->assign('branch_hq_id', $branch_hq_id);
        $this->assign('party_branch_hq', $party_branch_hq);
        $this->assign('Branch_hq', $Branch_hq);
        $this->display();
    }
//删除总支部成员
    public function ajaxDecHqMember($id = 0){
        D('PartyBranchHqMembers')->where("id = $id")->delete();
        ajaxMsg(0, '删除成功');
    }

//支部成员
    public function branchmember(){
        $branch_id = I('id');
        $party_branch = D('PartyBranch')->where("id=$branch_id")->field('name')->find();
        $Branch =D('PartyBranchMembers')->where("branch_id=$branch_id")->select();
        $Branch = dutyorder($Branch);
        $this->assign('branch_id', $branch_id);
        $this->assign('party_branch', $party_branch);
        $this->assign('Branch', $Branch);
        $this->display();
    }
    //删除支部成员
    public function ajaxDecBranchMember($id = 0){
        $branchmamber =D('PartyBranchMembers')->where("id = $id")->find();
        $status = array(
            'status_id'=>'101',//用户表user 中 status_id=101  党内职务 为 无
        );
        D('User')->where(array('uid'=>$branchmamber['uid']))->save($status);
        D('PartyBranchMembers')->where("id = $id")->delete();
        ajaxMsg(0, '删除成功');
    }

    //新增支部成员
    public function add_branch_member(){
        $branch_id = I('branch_id');
        $Branch = D('PartyBranch')->where("id=$branch_id")->find();
        //获取SetMembers表里设置好的成员角色可选项
        $branch_members = D('SetMembers')->where(array('type'=>'branch_status_id'))->find();
        $branch_status_id =  explode(",",$branch_members['status_id']);
        foreach ($branch_status_id as $key =>$v){
            $post_data = D('PartyPost')->where(array('status_id'=>$v))->find();
            $set_branch_members[$key]['value'] = $v;
            $set_branch_members[$key]['name'] = $post_data['name'];
        }
        $this->assign('set_branch_members', $set_branch_members);
        $this->assign('branch_id', $branch_id);
        $this->assign('Branch', $Branch);
        $this->display();
    }
    //新增成员
    public function add_member()
    {
        $branch_hq_id = I('branch_hq_id');
        $Branch_hq = D('PartyBranchHq')->where("id=$branch_hq_id")->find();
//        echo'<pre>';
//        print_r($detail);
//        EXIT;
        $this->assign('Branch_hq', $Branch_hq);
////        $this->assign('p', I('get.p', 1));
        $this->display();
    }


    //获取用户
    public function  ajaxGetUsers_member()
    {

        $id = I('id', 0);
        $branch_id = I('branch_id', 0);
        $keyword = I('keyword', '');
//        ajaxMsg(1,$keyword);
        $type = I('type','normal');
        if($keyword){
            $user = M('User');
            $map['realname'] = array('LIKE',"%$keyword%");//模糊查询包含此文字
            if($branch_id){
                $map['branch_id'] = array('eq',$branch_id);
            }
            $page = $user->where($map)->select();
            $this->assign('keyword', $keyword);
        }else{
            $page = D('User')->where(array('branch_id'=>$branch_id))->select();//select();//limit(0,30)->select();
        }
        foreach ($page as $index => $item) {
            $uid = $item["uid"];
            $realname = $item['realname'];
            $branch_name = $item['branch_name'];
            if($branch_name){
                $name = $item['realname'].$item['mobile'] . "[$branch_name]";
            }else{
                $name = $item['realname'].$item['mobile'];
            }
            $item['html'] = "<a style='color: black;cursor: pointer;'><div class='item canselect' data-id='$uid' data-name='$realname'>$name</div></a>";

            $page[$index] = $item;
        }

        ajaxMsg(0, 'success', $page);

    }
    //保存支部成员
    public function ajaxSaveBranchMember()
    {

        $uid = I('id');
        $branch_id = intval(I('branch_id'));
//        $status = intval(I('status',0));
        $status = I('status',0);
        if(!$branch_id){
            ajaxMsg(1, '参数有误');
        }
        if (!$uid) {
            ajaxMsg(1, '请先选择用户');
        }
        if ($branch_id && $uid) {
            $user_branch_id= D('User')->where(array('uid'=>$uid))->field('branch_id')->find();//查询该用户的支部id
            if($user_branch_id['branch_id']){
                if($user_branch_id['branch_id'] != $branch_id){  //保存职务时如果和所要加入的支部不相同，则提示其所属支部
                    $branch_name = D('PartyBranch')->where(array('id'=>$user_branch_id['branch_id']))->field('name')->find();
                    $name = $branch_name['name'];
                    ajaxMsg(1, "该用户属于$name");
                }
            }
        }
        //$status    0:支部党员 13:委员 1:书记 2:副书记 3:管理员 4:组织委员5:宣传委员6:纪检委员7:生活委员8:青年委员9:群工委员10:学习委员11:文体委员12:保卫委员
        D('PartyBranchMembers')->where(array('uid'=>$uid,'branch_id'=>$branch_id,))->delete();//先将这个用户在这个支部之前的职务删除
        foreach($status as $item){
            if($item ==1){
                D('PartyBranchMembers')->where(array('branch_id'=>$branch_id,'status'=>1))->delete();//如果选了书记，书记就一个，在添加之前删除原来的记录
            }
            D('User')->where(array('uid'=>$uid))->save(array('status_id'=>$item,'branch_id'=>$branch_id));//将职务status  保存到user表中 status_id
            $name =  D('user')->where("uid=$uid")->field('realname')->find();
            D('PartyBranchMembers')->add(array('branch_id'=>$branch_id,'uid'=>$uid,'status'=>$item,'realname'=>$name['realname']));
        }
//        $name =  D('user')->where("uid=$uid")->field('realname')->find();
//        D('PartyBranchMembers')->add(array('branch_id'=>$branch_id,'uid'=>$uid,'status'=>$status,'realname'=>$name['realname']));

        ajaxMsg(0, '保存成功');
    }
    public function ajaxSaveMember()
    {

        $uid = I('id');
        $branch_hq_id = intval(I('branch_hq_id'));
//        $status = intval(I('status',0));
        $status = I('status');
        if(!$branch_hq_id){
            ajaxMsg(1, '参数有误');
        }

        if (!$uid) {
            ajaxMsg(1, '请先选择用户');
        }
        //$status    0:成员 1:书记 2:副书记 3:管理员
//        if($status == 1){
//            D('PartyBranchHqMembers')->where(array('branch_hq_id'=>$branch_hq_id,'status'=>1))->delete();//书记就一个，添加之前删除原来的
//        }
        if($uid){
            $name =  D('user')->where("uid=$uid")->field('realname')->find();
            D('PartyBranchHqMembers')->add(array('branch_hq_id'=>$branch_hq_id,'uid'=>$uid,'status'=>$status,'realname'=>$name['realname']));
            ajaxMsg(0, '保存成功');
        }else{
            ajaxMsg(1, '参数错误');
        }
    }
    public function ajaxBranchHQEdit()
    {
        $id = I('id');
        $name = I('name');
        $sort = I('sort');
        $sj_uid = I("post-1");
        $adm_uid = I("post-2");

        $work_id = I('work_id');
        $committee_id = I('committee_id');
        $working_id = I('workingid');
        if($work_id){
            $result = D('PartyOrganization')->where("id=$work_id")->field('working_id')->find();//根据work_id找
        }
        if(!$sort){
            $sort = 0;
        }
        if (!$name)
            ajaxMsg(1, "请先填写名称");

        if ($id) {
//             $posts = D('Post')->select();
//             foreach ($posts as $item) {
//                 //历史记录
//                 $post_id = $item['id'];
//                 $oldUser = D('User')->where("branch_hq_id=$id and post_id=$post_id")->find();
//                 if ($oldUser) {
//                     $oldUid = $oldUser['uid'];
//                     D('User')->where("uid=$oldUid")->save(array('post_id' => null, 'branch_hq_id'=>null,'update_time'=>time()));
//                 }


//                 $uid = I("post-" . $item['id']);
//                 if ($uid) {

//                     $user = D('User')->find($uid);
// //                    if ($user['branch_id'] != $id) {
// //                        ajaxMsg(1, "请选择当前支部的成员");
// //                    }

//                     if ($user) {
//                         $user['post_id'] = $post_id;
//                         $user['branch_hq_id'] = $id;
//                         $user['update_time']=time();
//                         D('User')->save($user);

//                     } else {
//                         D('User')->where("branch_hq_id=$id and post_id=$post_id")->save(array("post_id" => null, 'branch_hq_id'=>null,'update_time'=>time()));
//                     }
//                 } else {
//                     D('User')->where("branch_hq_id=$id and post_id=$post_id")->save(array("post_id" => null, 'branch_hq_id'=>null,'update_time'=>time()));
//                 }
            // }
            $time = time();
            D('PartyBranchHq')->where("id=$id")->save(array('sort'=>$sort, 'name'=>$name,'working_id'=>$working_id, 'work_id'=>$work_id, 'committee_id'=>$committee_id, 'last_change_time' => $time,'sj_uid'=>$sj_uid,'adm_uid'=>$adm_uid));


            ajaxMsg(0, "success");
        } else {
            ajaxMsg(1, "找不到该支部");

        }

    }


    // 删除支部
    public function ajaxDecPartyBranch()
    {
        $id = I('post.id');

        $count = D('user')->where("branch_id=$id and status=1")->count();
        if ($count > 0) {
            ajaxMsg(1, "有部分用户在该分支部下");
        }

        D('PartyBranch')->where(array('id' => $id))->delete();
        ajaxMsg(0, "已删除");
    }
    // 删除支部
    public function ajaxDecPartyBranchHQ()
    {
        $id = I('post.id');

        $count = D('UserView')->where("PartyBranch.branch_hq_id=$id")->count();
		 if ($count > 0) {
            ajaxMsg(1, "有部分用户在该分支部下");
        }

            $count = D('PartyBranch')->where("branch_hq_id=$id")->count();
			if($count > 0){
				ajaxMsg(1, "该总支下还有分支");
			}


        D('PartyBranchHq')->where(array('id' => $id))->delete();
        ajaxMsg(0, "已删除");
    }

    // 支部换届
    public function branchChange()
    {

        $this->set_sidebar_sub('index');
        $id = I('id');

        $party = D('PartyBranch')->find($id);
        if ($party) {
            $this->assign('detail', $party);
            $posts = D('Post')->select();
            foreach ($posts as $index => $post) {
                $post_id = $post['id'];
                $user = D("UserView")->where("post_id=$post_id and branch_id=$id")->find();
                $post['user'] = $user;
                $posts[$index] = $post;
            }

            $this->assign('p', I('p', 1));
            $this->assign('posts', $posts);
        }

        $this->display();
    }
    // 支部换届
    public function branchHQChange()
    {
        $this->set_sidebar_sub('hq');
        $id = I('id');

        $party = D('PartyBranchHq')->find($id);
        if ($party) {
            $this->assign('detail', $party);
            $posts = D('Post')->select();
            foreach ($posts as $index => $post) {
                $post_id = $post['id'];
                $user = D("UserView")->where("post_id=$post_id and User.branch_hq_id=$id")->find();
                $post['user'] = $user;
                $posts[$index] = $post;
            }

            $this->assign('p', I('p', 1));
            $this->assign('posts', $posts);
        }

        $this->display();
    }

    // 支部换届
    public function branchEdit()
    {
        $this->set_sidebar_sub('index');
        $id = I('id');
        $Organiza = D('PartyOrganization')->select();//取党组列表
        $Working = D('PartyWorking')->select();//取党工委列表
//        $Committee = D('PartyCommittee')->select();//取党委列表
        $party = D('PartyBranch')->find($id);
        if ($party) {
            if($party['branch_hq_id']){
                $hq = D('PartyBranchHq')->find($party['branch_hq_id']);
                $party['hq_name'] = $hq['name'];
            }
            $this->assign('detail', $party);

            $posts = D('Post')->select();
            foreach ($posts as $index => $post) {
                $post_id = $post['id'];
                $user = D("UserView")->where("post_id=$post_id and User.branch_hq_id is null and branch_id=$id")->find();
                $post['user'] = $user;
                $posts[$index] = $post;
            }

            $this->assign('p', I('p', 1));
            $this->assign('posts', $posts);
        }
        $hqs = D('PartyBranchHq')->select();
        $this->assign('Organiza',$Organiza);
        $this->assign('Working',$Working);
        $this->assign('hqs', $hqs);

        $this->display();
    }

    // 支部换届
    public function branchHQEdit()
    {
        $id = I('id');
        $this->set_sidebar_sub('hq');
        $party = D('PartyBranchHqView')->find($id);
        $Working = D('PartyWorking')->select();//取党工委列表
        $Organiza = D('PartyOrganization')->select();//取党组列表
        if ($party) {
            $this->assign('detail', $party);
            // $posts = D('Post')->select();
            // foreach ($posts as $index => $post) {
            //     $post_id = $post['id'];
            //     $user = D("UserView")->where("post_id=$post_id and  User.branch_hq_id=$id")->find();
            //     $post['user'] = $user;
            //     $posts[$index] = $post;
            // }
         // echo to_json_string($party);
            if ($party['adm_uid']) {
                $adm=D('User')->where(array('uid'=>$party['adm_uid'],'status'=>1))->find();
            }
            $this->assign('adm_username',$adm['realname']);
            $this->assign('p', I('p', 1));
            $this->assign('posts', $posts);
        }
        $this->assign('Working',$Working);
        $this->assign('Organiza',$Organiza);
        $this->display();
    }

    // 换届记录
    public function changeList()
    {
        $this->set_sidebar_sub('index');
        $id = I('id');
        $page = D('PartyBranchChangeLogView')->findPage("branch_id = '$id'", 15, 'create_time desc');
        $this->assign('page', $page);
        $this->display();
    }
    // 换届记录
    public function hqChangeList()
    {
        $id = I('id');
        $detail = D('PartyBranchHq')->find($id);
        $this->assign('detail', $detail);
        $page = D('PartyBranchChangeLogView')->findPage("PartyBranchChangeLog.branch_hq_id = '$id'", 15, 'create_time desc');
        $this->assign('page', $page);
        $this->display();
    }


    //用户管理
    public function userEdit()
    {
        $this->set_sidebar_sub('users');
        $uid = I('uid');
        if ($uid) {
            $detail = D('UserView')->where(array('User.uid'=>$uid))->find();
            $detail['person_adm_id'] = unserialize($detail['person_adm_id']);
            $this->assign('detail', $detail);
        }
        $this->assign('p', I('get.p', 1));
        $groups = D('AdminAuthGroupView')->where("type=1 and status=1")->select();
        $adms = D('AdmPost')->where(array('pid'=>array('gt',0)))->select();
        $roles = D('Role')->select();
        $branchs = D('PartyBranch')->select();

        //负责人
        $person_adm = D('PersonAdmin')->select();
        $map['id'] = array('between', array(0,7));
        $partypost = D('PartyPost')->where($map)->select();//全部党内职务列表
        $wu = array(
            'id'=>102,
            'status_id'=>101,
            'name'=>'无'
        );
        $jjsj = array(
            'id'=>15,
            'status_id'=>14,
            'name'=>'纪检书记'
        );
        array_push($partypost,$jjsj);//插入纪检书记的选项
        array_unshift($partypost,$wu);//插入一个 ‘无’ 的选项
//        //从支部成员表中获取此用户的全部党内职务
        $post = D('PartyBranchMembers')->where(array('branch_id'=>$detail['branch_id'],'uid'=>$uid))->select();
        //为选中的加一个标识，方便页面显示
        foreach($partypost as &$item){
            foreach($post as $v){
                if($item['status_id']==$v['status']){
                    $item['choose'] = '1';//1 选中 0不选中
                 }
            }
        }

        $this->assign('post',$post);//成员表中的全部职务
        $this->assign('person_adm',$person_adm);
        $this->assign('partypost', $partypost);
        $this->assign('branchs', $branchs);
        $this->assign('roles', $roles);
        $this->assign('groups', $groups);
        $this->assign('adms', $adms);
        $this->display();
    }

    // 用户发展信息列表
    public function developInfo() {
        $this->set_sidebar_sub('users');
        $auth = session_auth();
        $uid = I('get.uid');
        $this -> assign('uid', $uid);

        $tab = I('get.tab', 1);
        $this -> assign('tab', $tab);
        if ($auth == 1) { // 判断是否管理员
            if ($tab == 1) { // 标签1 入党申请书
                $page = $this -> _develop_info_tab1($uid);
//                $this -> assign('page', $page);
            } elseif ($tab == 2) { // 标签2 思想报告
                $page = $this -> _develop_info_tab2($uid);
//                $this -> assign('page', $page);
            } elseif ($tab == 3) { // 标签3 考试记录
                $page = $this -> _develop_info_tab3($uid);
//                $this -> assign('list', $list);
            } else { // 标签4 支部和党委意见
                $page = $this -> _develop_info_tab4($uid);
//                $this -> assign('list', $list);
            }
        }
        $this -> assign('page', $page);
        $this -> display();
    }

    private function _develop_info_tab1($uid){
        $map['UserOfficialApply.status'] = array('gt', -1);
        $map['UserOfficialApply.uid'] = $uid;
        $page = D('Mob/UserOfficialApplyView') -> findPage($map, 15, 'UserOfficialApply.create_time desc');
        $list = $page["list"];
        foreach ($list as $index=>$item ){
            if($item['file_ids']){
                $files = D('UserFile') -> where(array('id' => array('in', $item['file_ids']))) -> select();
                $page['list'][$index]['files'] = $files;
            }else{
                $page['list'][$index]['files'] = array();
            }
        }
//        exit("aaa = " . to_json_string($page));
        return $page;
    }
    private function _develop_info_tab2($uid){
        $map['UserReport.status'] = array('gt', -1);
        $map['UserReport.uid'] = $uid;
        $page = D('Mob/UserReportView') -> findPage($map, 15, 'UserReport.create_time desc');
//        $this -> assign('page', $page);
        return $page;
    }
    private function _develop_info_tab3($uid){
        $map['UserExam.status'] = array('gt', -1);
        $map['UserExam.uid'] = $uid;
        $page = D('Mob/UserExamView') -> findPage($map, 15, 'UserExam.create_time desc');
        return $page;
    }
    private function _develop_info_tab4($uid){
        $map['UserAdvice.status'] = array('gt', -1);
        $map['UserAdvice.uid'] = $uid;
        $page = D('Mob/UserAdviceView') -> findPage($map, 15, 'UserAdvice.create_time desc');
        return $page;
    }

    // 换届记录
    public function userSpace()
    {
        $this->set_sidebar_sub('users');
        $id = I('uid');
        $page = D('UserSpaceView')->findPage(array("uid"=>$id), 15, 'create_time desc');
        $detail = D('User')->find($id);
        $this->assign('detail', $detail);
        $this->assign('page', $page);
        $this->display();
    }

    public function users()
    {
        $this->set_sidebar_sub('users');
        $keyword = I('keyword');
        $searchKey = array();
        $search['User.status'] = array('gt',-1);

        if ($keyword) {
            $search['User.realname'] = array('like',"%$keyword%");
            $searchKey['keyword'] = $keyword;
        }
        $post_id = I('post_id');
        if ($post_id) {
            $search['User.post_id'] = $post_id;
            $searchKey['post_id'] = $post_id;
        }
        $branch_id = I('branch_id');
        if ($branch_id) {
            $search['User.branch_id'] = $branch_id;
            $searchKey['branch_id'] = $branch_id;
        }
        $role_id = I('role_id');
        if ($role_id) {
            $search['User.role_id'] = $role_id;
            $searchKey['role_id'] = $role_id;
        }else{
            $search['User.role_id'] = array('EXP','IS NOT NULL');
        }
        $this->assign('search', $searchKey);
        $admin = admin();
        $auth = session_auth();
        if($auth == 2){//总支
            $search['PartyBranch.branch_hq_id'] = $admin['admin_branch_hq_id'];
        }elseif($auth == 3){//总支
            $search['User.branch_id'] = $admin['admin_branch_id'];
        }
        $page = D('Common/UserView')->find_page($search,"", "","User.sort desc",10);
        $roles = D('Role')->select();
        $posts = D('Post')->select();
        $branchs = D('PartyBranch')->select();
        $this->assign('roles', $roles);
        $this->assign('posts', $posts);
        $this->assign('branchs', $branchs);
        $this->assign('page', $page);
        $this->display();

    }

    public function member()
    {
        $this->set_sidebar_sub('member');

        $searchKey = array();
        $search['User.status'] = array('gt',-1);

        $keyword = I('keyword');
        if ($keyword) {
            $search['User.realname'] = array('like',"%$keyword%");
            $searchKey['keyword'] = $keyword;
        }
        $post_id = I('post_id');
        if ($post_id) {
            $search['User.post_id'] = $post_id;
            $searchKey['post_id'] = $post_id;
        }
        $role_id = I('role_id');
        if ($role_id) {
            $search['User.role_id'] = $role_id;
            $searchKey['role_id'] = $role_id;
        }else{
            $search['User.role_id'] = array('EXP','IS NOT NULL');
        }
        $this->assign('search', $searchKey);

        $admin = admin();
        $auth = AdminUtil::auth();

        // 支部管理员
       if($auth == 3){
            $branch = AdminUtil::auth_branch();
            $search['User.branch_id'] = $branch['id'];

            $page = D('Common/UserView')->find_page($search,"", "","User.sort desc",15);
            $roles = D('Role')->select();
            $posts = D('Post')->select();

            $this->assign('roles', $roles);
            $this->assign('posts', $posts);
            $this->assign('page', $page);
            // echo to_json_string(AdminUtil::auth_branch());

            $this->display();
       }else{
//
       }
    }

    public function relationIn()
    {
        $this->set_sidebar_sub('relations');
        $uid = I('uid');
        if ($uid) {
            $detail = D('UserView')->where(array('User.uid'=>$uid))->find();
            $this->assign('detail', $detail);
        }else{//返回可操作用户列表
            $keyword = I('keyword');
            $page = D('Common/UserView')->findPage("User.status=1 and User.branch_id is null and User.qyuserid is not null ".($keyword?" and User.realname like '%$keyword%'":""),15, "User.uid desc");
            $this->assign('page', $page);
            $this->assign('search', array('keyword'=>$keyword));
            $this->display("relationInUsers");
        }

        $this->assign('p', I('get.p', 1));
        $groups = D('AdminAuthGroupView')->where("type=1 and status=1")->select();
        $roles = D('Role')->select();
        $branchs = D('PartyBranch')->select();

        $this->assign('branchs', $branchs);
        $this->assign('roles', $roles);
        $this->assign('groups', $groups);
        $this->display();
    }

    public function relations(){
        $this->set_sidebar_sub('relations');
        $auth = session_auth();
        $admin = admin();
        if($auth > 0){
            $map = array();
            $keyword = I('keyword');
            $map['User.realname'] = array('like','%'.$keyword.'%');
            if($auth == 1){

            }elseif ($auth == 2){
                $map['PartyBranch.branch_hq_id'] = $admin['admin_branch_hq_id'];
            }elseif($auth == 3){
                $map['PartyBranchRelationLog.branch_id'] = $admin['admin_branch_id'];
            }
            $this->assign('search', array('keyword'=>$keyword));
            $page = D('PartyBranchRelationLogView')->find_page($map,'','PartyBranchRelationLog.create_time desc','',15);
            $this->assign('page',$page);
        }
        $this->display();
    }

    public function ajaxRelationIn()
    {
        $realname = I('realname');
        $mobile = I('mobile');
        $weixinid = I('weixinid');
        $email = I('email');
        $uid = I('uid');


        $role_id = I('role_id');
        if(!$role_id){
            ajaxMsg(1,"请先选择用户的角色");
        }
        $branch_id = I('branch_id');
        if(!$branch_id){
            ajaxMsg(1,"请先选择调入支部");
        }


        $u = D('User')->find($uid);
        //获取成员信息，判断是否已经存在了
        $info =  QYConfig::check_userid($u['qyuserid']);
        if(!$info){//存在,修改用户
            ajaxMsg(1,"该用户没有在企业号上添加,请先在用户管理同步通信录");
        }

        if ($realname) {
            //查找是否有存在的规则



            if ($uid) {
                $branch = D('PartyBranch')->find($branch_id);
                $status = relation_change_log($u,1,$branch_id,array('branch_name'=>$branch['name'],'in'=>I('target'),'reason'=>I('reason')),admin());
                if($status){
                    $user = array(
                        'role_id'=>$role_id,
                        'realname' => $realname,
                        'weixinid'=>$weixinid,
                        'email' => $email,
                        'mobile' => $mobile,
                        'status' => I('status', 1),
                        'birthday' => I('birthday', ''),
                        'gender' => I('gender', 0),
                        'position' => I('position'),
                        'update_time'=>time()

                    );
                    D('User')->where(array('uid' => $uid))->save($user);
                    ajaxMsg(0, "success");
                }else{
                    ajaxMsg(1, "调入失败");
                }
            }
            ajaxMsg(1, "调出失败");
        } else {
            ajaxMsg(1, "请填写姓名");
        }

    }

    public function ajaxSaveUser()
    {
//        ajaxMsg(1, to_json_string(I()));
        $realname = I('realname');
        $mobile = I('mobile');
        $uid = I('uid');
        // $group_id = I('group_id',4);
        $role_id = I('role_id');
        $adm_id = I('adm_id');
        $status_id = I('status_id');
        $cover_path = I('cover_path','');
        $branch_id = I('branch_id');
        if(!(I('person_admin'))){
            $person_adm_id ="";
        }else{
            $person_adm_id = serialize(I('person_admin'));
        }
        if ($status_id && !$branch_id) {
            ajaxMsg(1, "选择党内职务前请先选择支部");
        }

        if (!$mobile) {
            ajaxMsg(1, "请填写手机号码");
        }

        if(!$role_id){
            ajaxMsg(1,"请先选择用户的角色");
        }

        if ($realname) {
            //查找是否有存在的规则
            $user = array(
                'adm_id' => $adm_id?$adm_id:null,
                'role_id'=>$role_id,
//                'status_id'=>$status_id,//党内职务
                'realname' => I('realname'),
                'sort' => I('sort'),
                'email' => I('email'),
                'mobile' => $mobile,
                'status' => I('status', 1),
                'birthday' => I('birthday', ''),
                'activist_date' => strtotime(I('activist_date')),
                'native_place' => I('native_place', ''),
                'education' => I('education', ''),
                'gender' => I('gender', 0),
                'is_leader'=>0,
                'update_time'=>time(),
                'person_adm_id'=>$person_adm_id

            );
            // 党内职务保存回 party_branch_members成员表
            //先查找是否这个支部是否有这个成员
//            if($branch_id and $uid){
//                $result =  D('PartyBranchMembers')->where(array('uid'=>$uid,'branch_id'=>$branch_id))->find();
//            }
                //身份是否有改变
                $check_role = D('user')->where(array('uid'=>$uid))->getField('role_id');
               // $check_role_log = D('UserRoleLog')->where(array('uid'=>$uid,'new_role'=>$role_id))->find();
                if($role_id != $check_role){
                    $role_log['uid'] = $uid;
                    $role_log['conversion_time'] = time();
                    $role_log['old_role'] = $check_role;
                    $role_log['new_role'] = $role_id;
                    D('UserRoleLog')->add($role_log);
                    // if($check_role_log){
                    //     //删除之前的转换信息，以最新的为准
                    //     D('UserRoleLog')->where(array('id'=>$check_role_log['id']))->delete();
                    // }
                }
                $result =  D('PartyBranchMembers')->where(array('uid'=>$uid,'branch_id'=>$branch_id))->delete();
                foreach ($status_id as $key=>$item) {
                    $Member = D('User')->where("uid=$uid")->field('realname')->find();
                    if($item == 1){
                        D('PartyBranchMembers')->where(array('status'=>'1','branch_id'=>$branch_id))->delete();//有选书记，要先删除本支部的书记记录
                    }
                    $status = array(
                        'uid' => $uid,
                        'realname' => $Member['realname'],
                        'branch_id' => $branch_id,
                        'status' => $item,
                    );
                    D('PartyBranchMembers')->add($status);
                }

            if($cover_path){
                $user['headimgurl'] = $cover_path;
            }
            $official_date = I('official_date', '');
            if($official_date){
                $user['official_date'] = $official_date;
            }

            $u = D('User')->find($uid);
            if ($u['post_id'] < 1) {//如果没有职务

                $branch_id = I('branch_id');
                if (!$branch_id)
                    $branch_id = null;
                $user['branch_id'] = $branch_id;
            }

            //如果是保存
            if ($u) {

                if($u['branch_id'])
                    $oldBranch = D('PartyBranch')->find($u['branch_id']);
                else{
                    $oldBranch['name'] = "未选择支部";
                }
                $branch_id = I('branch_id');
                if($branch_id)
                    $branch = D('PartyBranch')->find($branch_id);
                else{
                    $branch['name'] = "未选择支部";
                }

                if($u['branch_id'] != $branch_id){
                    relation_change_log($u,2,$branch_id,array('org_branch_name'=>$oldBranch['name'],'branch_name'=>$branch['name']),admin());
//                    $user['post_id'] = null;
//                    $user['branch_hq_id'] = null;
                }

				if($adm_id > 3){
            		$user['is_leader'] = 1;
        		}else{
                    $user['is_leader'] = 0;
                }
		        // if($u['post_id'] == 1){
		        //     $user['is_leader'] = 1;
		        // }
                $url_status=0;
				if (AdminUtil::auth() == 3) {
                    $adm_branch = AdminUtil::auth_branch();
                    if ($u['branch_id'] != $adm_branch['id']) {
                        ajaxMsg(1, "不能修改其他支部的用户信息");
                    }
                    $url_status=1;
                }
                //根据branch_id 获取所有上级id
//                $Auto  = new AutoMatchController();
                $result = $this->auto('branch_id',$branch_id);
                $user['branch_hq_id'] = $result['branch_hq_id'];
                $user['organization_id'] = $result['work_id'];
                $user['working_id'] = $result['working_id'];
                // D('AdminAuthGroupAccess')->where("uid=$uid")->save(array('group_id' => $group_id));
//                ajaxMsg(1, to_json_string($rule));
                D('User')->where(array('uid' => $uid))->save($user);
            }
            ajaxMsg(0, $url_status);
        } else {
            ajaxMsg(1, "请填写姓名");
        }

    }
    //查询上级
    function auto($type,$value){//$type 类型(判断传进来的是哪个层级的id)  $value  id值
        if($type == "branch_id"){
            $upid =  D("PartyBranch")->where("id=$value")->field('branch_hq_id,work_id,working_id')->find();
        }
        elseif($type == "branch_hq_id"){
            $upid =  D("PartyBranchHq")->where("id=$value")->field('work_id,working_id')->find();
        }elseif($type == "work_id"){
            $upid =  D("PartyOrganization")->where("id=$value")->field('working_id')->find();
        }else{

        }
        return $upid;
    }
    public function  ajaxSaveUserStatus()
    {
        $id = I('id');
        $user = D('User')->find($id);
        if ($user) {
            $status = $user['status'];
            if ($status == 1) {
                $user['status'] = 0;
            } else {
                $user['status'] = 1;
            }
            $user['update_time'] = time();
            D('User')->where(array('uid' => $id))->save($user);
            ajaxMsg(0, '保存成功');
        } else {
            ajaxMsg(1, '该用户已被删除了');
        }

    }


    public function honor(){
        $this->set_sidebar_sub('partyHonor');
        $map = array();
        $map['status'] = 1;
        $page = D('PartyBranchHonorView')->findPage($map, 15, 'create_time desc');
        $this->assign('page', $page);
        $this->display();
    }

    public function honorAdd(){
        $this->set_sidebar_sub('partyHonor');

        $id = I('id');
        if ($id) { //如果是编辑，解析接收角色和接收支部
            $detail = D('PartyBranchHonor')->find($id);
            $this->assign('detail', $detail);
        }
        $branchs = D('PartyBranch')->select();
        $this->assign('branchs', $branchs);
        $this->assign('p', I('get.p', 1));
        $this->display();
    }

    public function ajaxAddHonor(){
        $auth = session_auth();
        if ($auth == 1){
            $data['name'] = I('post.name');
            $data['create_time'] = time();
            $data['img_url'] = I('post.img_url');
            $data['branch_id'] = I('post.branch_id');
            $id = I('post.id');
            if ($id > 0 && !empty($id)) {
                $old = D('PartyBranchHonor')->where(array('id'=>$id)) -> find();
                if ($old) {
                    $data["id"] = $old["id"];
                    D('PartyBranchHonor')->where(array('id'=>$id))->save($data);
                }
            }else{
                $data['uid'] = uid();
                $article_id = D('PartyBranchHonor')->add($data);
            }
            ajaxMsg(0, '保存成功');
        }else{
            ajaxMsg(1, '权限不足');
        }
    }

    public function ajaxDecPartyBranchHonor(){
        $auth = session_auth();
        if ($auth == 1){
            $id = I('post.id');
            if ($id > 0 && !empty($id)) {
                $old = D('PartyBranchHonor')->where(array('id'=>$id)) -> find();
                $old['status'] = -1;
                D('PartyBranchHonor')->where(array('id'=>$id))->save($old);
                ajaxMsg(0, '保存成功');
            }
            ajaxMsg(1, '不存在');
        }else{
            ajaxMsg(1, '权限不足');
        }
    }

    public function developInfoDetail(){
        $this->set_sidebar_sub('users');
        $id = I('id');
        $detail = D('Mob/UserOfficialApplyView')->find($id);
        $this->assign('detail', $detail);
        $this->display();
    }

    public function developInfoReportDetail(){
        $this->set_sidebar_sub('users');
        $id = I('id');
        $detail = D('Mob/UserReportView')->find($id);
        $this->assign('detail', $detail);
        $this->display();
    }

    public function developInfoAdviceDetail(){
        $this->set_sidebar_sub('users');
        $id = I('id');
        $detail = D('Mob/UserAdviceView')->find($id);
        $this->assign('detail', $detail);
        $this->display();
    }


    //删除用户
    public function ajaxDecUser(){
        $uid = I('uid');
        $result = D('User')->where(array('uid'=>$uid))->delete();
        if($result){
            ajaxMsg(0,'success','删除成功');
        }else{
            ajaxMsg(1,'success','删除失败');
        }
       
    }

    //查重
    public function  CheckUser(){
        $this->set_sidebar_sub('users');
        $role_data = C('ROLE_GROUP');
        $sql = "Select *,Count(*) From user Group By realname Having Count(realname) > 1";
        $Model = new \Think\Model();
        $lists = $Model->query($sql);
        $repeats =array();
        foreach ($lists as $v){
            $repeat = D('User')->where(array('realname'=>$v['realname']))->order('branch_id desc')->select();
            foreach ($repeat as $item){
                //补充支部名称
                 $branch_name =  D('PartyBranch')->where(array('id'=>$item['branch_id']))->find();
                $item['branch_name'] = $branch_name['name'];
                //补充角色
                if($item['role_id'] > 0){
                    $item['role_name'] = $role_data[$item['role_id']-1]['name'];
                }
                array_push($repeats,$item);
            }
        }
        $page['list'] = $repeats;
        $this->assign('page', $page);
        $this->display('users');
    }

}
