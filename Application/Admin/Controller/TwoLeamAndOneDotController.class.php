<?php
namespace Admin\Controller;

use Common\Controller\BaseController;
use Think\Controller;

/**
 * 两学一做
 * @author Calvin 2019/1/23
 */
class TwoLeamAndOneDotController extends BaseAdminController
{
    // 定义类型
    const learntype = array(
        '学党章党规', '学系列讲话', '做合格党员'
    );
    const basestatus = array('草稿', '结束', '启用');
    const fathername = 'oneDo';
    // 数据集库链接
    protected $_TSOD;

    function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->set_sidebar_module('TwoLeamAndOneDot');
        $this->_TSOD = D('TwoStudyOneDo');
    }
    /**
     * 两学一做入口
     */
    public function index()
    {
        $type = I('get.type');
        $keyword = I('get.keyword');
        $branchId = I('get.branch_id');
        $this->set_sidebar_sub('index');

        $admin = admin();
        $auth = session_auth();
        $map = array();

        // 如果是超级管理员就渲染全部数据
        // 否则只能看自己发的
        if (1 !== intval($admin['uid'])) {
            $map['TwoStudyOneDo.uid'] = array('eq', $admin['uid']);
        }
        // 获得所有符合条件的支部
        $map['TwoStudyOneDo.status'] = array('gt', -1);
        if (is_numeric($branchId)) {
            $map['TwoStudyOneDo.branch_id'] = array('eq', $branchId);
        }
        if (is_numeric($type)) {
            $map['TwoStudyOneDo.type'] = array('eq', $type);
        }
        if ($keyword) {
            $map['TwoStudyOneDo.theme'] = array('like', '%' . $keyword . '%');
        }
        $lists = D('OneDoView')->findPage($map, 15, 'create_at desc');
        $this->assign('search', array('keyword' => $keyword, 'type' => $type, 'branch_id' => $branchId));
        $this->assign('brancds', M('PartyBranch')->field('id,name')->select());
        $this->assign('page', $lists);
        $this->assign('basestatus', self::basestatus);
        $this->assign('type', self::learntype);
        $this->display();
    }

    /**
     * 编辑
     * @return [type] [description]
     */
    public function edit()
    {
        $id = I('get.id');
        $user = array();
        $this->set_sidebar_sub('index');
        $attend = array();
        $info = $this->_TSOD->editInfo($id);
        if (!empty($info)) {
          $user = M('user')->field('uid,realname')
            ->where(array('branch_id'=> $info['branch_id']))->select();

          foreach ($info['attend'] as $value) {
            $attend[$value['attend_type']][] = $value['uid'];
          }
          unset($info['attend']);
        }
        $this->assign('attend', $attend);
        $this->assign('info', $info);
        $this->assign('types', self::learntype);
        $this->assign('users', $user);
        $this->display();
    }

    /**
     * 展示新增页面
     */
    public function showAdd()
    {
        $this->set_sidebar_sub('index');
        $branchId = I('get.branchId', admin()['branch_id']);
        $user = M('user')->field('uid,realname')->where(array('branch_id'=> $branchId))->select();

        // $type = self::learntype;
        $this->assign('users', $user);
        $this->assign('types', self::learntype);
        $this->display();
    }


    /**
     * Ajax 上传附件
     */
    public function ajaxUploadAnnex()
    {
      $upload = new \Think\Upload();// 实例化上传类
      $upload->maxSize = 3145728;// 设置附件上传大小
      $upload->exts = array('jpg', 'gif', 'png', 'jpeg', 'doc', 'pdf', 'xlsx', 'xls');// 设置附件上传类型
      $upload->rootPath = './Uploads/'; // 设置附件上传根目录
      $upload->savePath = 'oneDo/'; // 设置附件上传（子）目录
      $upload->replace = true;

      $file = $_FILES['file'];
      $info = $upload->uploadOne($file);
      if (!$info) {
        ajaxMsg(1, $upload->getError());
      } else {
        $path = '/Uploads/'.$info['savepath'].$info['savename'];
        $data['upload_id'] = admin_uid();
        $data['father_name'] = self::fathername;
        $data['files_path'] = $path;
        $data['former_name'] = $info['name'];
        $data['filetype'] = $info['type'];
        $_files = D('Files');
        $res= $_files->insert($data);
        ajaxMsg(200,'success', $res);
      }
    }

    /**
     * Ajax 保存数据
     * @return [type] [description]
     */
    public function ajaxSave()
    {
        $post = I('post.data');
        $branchId = admin()['branch_id'];
        $postData['id'] = $post['id'];
        $postData['branch_id'] = intval($post['branchId']) ? intval($post['branchId']) : $branchId;
        $postData['type'] = intval($post['type']); // 两学一做
        $postData['step'] = $post['step']; // 主要措施
        $postData['info'] = $post['info'];
        $postData['theme'] = $post['theme'];
        $postData['claim'] = $post['claim']; // 工作要求
        $postData['mission'] = $post['mission'];
        $postData['start_time'] = $post['start_time'];
        $postData['status'] = $post['status'];

        $postData['cq'] = $post['cq'];
        $postData['qj'] = $post['qj'];
        $postData['qx'] = $post['qx'];
        $post['file_id'] = explode(',', $post['file_id']);
        $post['surplus_file_id'] = explode(',', $post['surplus_file_id']); // to string
        if (!empty($post['file_id'][0])) { // 新加的附件
            if (!empty($post['surplus_file_id'][0])) {
                $addFileId = array_intersect($post['file_id'], $post['surplus_file_id']);
            }else {
                $addFileId = $post['file_id'];
            }
            $postData['addFileId'] = implode(',', $addFileId); // to array
        }

        if (!empty($post['surplus_file_id'][0])) { // 新加的附件
            if (!empty($post['file_id'][0])) {
                $surplusFileId = array_diff($post['file_id'], $post['surplus_file_id']);
            }else {
                $surplusFileId = $post['surplus_file_id'];
            }
            $postData['delFileId'] = implode(',', $surplusFileId);
        }

        if (empty($postData['id'])) {
            $res = $this->_TSOD->insert($postData);
            $msg = '新增成功';
        }else {
            $res = $this->_TSOD->updateAction($postData);
            $msg = '更新成功';
        }

        if (isset($res['id'])) {
          ajaxMsg(0, $msg);
        }
        ajaxMsg(1, $res);
    }

    /**
     * 更新状态
     */
    public function uploadStatus()
    {
        $id = I('post.id');
        $_OneDo = M('TwoStudyOneDo');
        $_OneDo->find($id);
        $status = $_OneDo->status;
        $_OneDo->status =  !$status;
        if ($_OneDo->save() === false) ajaxMsg(1, '更新失败');
        ajaxMsg(0, 'success', array('status' => !$status));
    }

    public function ajaxDec()
    {
      $id = I('post.id');
      if ($id && is_numeric($id)) {
        $res = $this->_TSOD->where("id=$id")->setField('status', -1);
        if ($res) ajaxMsg(0, 'success');
      }
      ajaxMsg(1, '删除失败，请稍后再试..');
    }

}
